<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[深夜反思]]></title>
    <url>%2F2018%2F07%2F11%2F%E6%B7%B1%E5%A4%9C%E5%8F%8D%E6%80%9D%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[2015年十大数字货币研究论文]]></title>
    <url>%2F2018%2F05%2F30%2Fpaper-2015-top%2F</url>
    <content type="text"><![CDATA[2015年十大数字货币研究论文 SoK: Research Perspectives and Challenges for Bitcoin and Cryptocurrenciess 建立“比特币首部系统性综述”。包括对文章评论，论文收集，整理和合并，完成了庞大的前期工作——从跨越三十年的学术来源，到IRC日志，论坛在线讨论和开发者邮件列表。他们确定的比特币设计的三大组成部分，并且单独进行分析，（1）交易和脚本，（2）共识和挖矿，（3）点对点通信网络。 Eclipse Attacks on Bitcoin’s Peer-to-Peer Network 攻击者垄断了受害者全部传入传出链接，将受害者从点对点网络中孤立。攻击者于是可以通过向受害者传输错误信息或抢占受害者的计算能力来实现不可告人的目的。https://www.usenix.org/conference/usenixsecurity15/technical-sessions/presentation/heilman Does Governance Have a Role in Pricing? Cross-Country Evidence from Bitcoin Markets Robert Viglione通过统计学的方式，证明经济自由度与比特币溢价之间的反比关系。他的方法是代表了一种基于潜在市场——而不是经济学家定义的——衡量经济自由度，并且是实时更新，而不是按年来更新。这为我们某些项目的研究提供了数据，例如对于选举的市场预测。即使在早期期阶段，在价格波动阶段，比特币正在成为一种有用的宏观数据。 Bitcoin in Islamic Banking and Finance 考虑到穆斯林人群占有全球四分之一的人口，而且比特币是没有利息的，Charles W Evans教授认为这种硬通货币和伊斯兰教义兼容金融之间有很大的重叠空间，能够在两个社区之间建立一个沟通的学术桥梁. Bitcoin-NG: A Scalable Blockchain Protocol Bitcoin-NG是一种可以自由扩展的方案，采用了“微区块（micro blocks）”和“核心区块（key blocks）”的方式，能够在比特币目前的点对点通信网络中解决吞吐量和延迟的问题。除了通过使用大规模比特币网络模拟环境来测试该方案的性能之外，作者还提出了一些全新的指标，如共识延迟和挖矿利用率量化来监测区块链协议的安全和效率。 Should Cryptocurrencies be Included in the Portfolio of the International Reserves Held by the Central Bank of Barbados? 对于小岛国家，在持有的储备资产中配置一部分是比特币的话也许是有益的。适当的投资组合既能够提升收益，也能够通过多样性来降低投机损失，而不会显著影响准备金价值波动。 The bitcoin backbone protocol: Analysis and applications 提取和分析比特币协议的核心”，概括他们分析的主要是两种属性，称之为通用前缀（common prefix）和块链质量（chain quality）。通用前缀数量主要是指网络收敛在单一历史的能力，块链质量属性表示恶意实体能够获得超越其挖矿能力的优势。 The Bitcoin Lightning Network: Scalable Off-Chain Instant Payments 闪电交易是一种正常的比特币交易，但是——除了极少数的情况——实际上并没有发布到区块链上。因为大量的交易数据是被存储在线下，闪电交易方式将会显著降低比特币交易成本，使其能够实现小额支付。 参考 2015年十大数字货币研究论文]]></content>
      <categories>
        <category>Paper</category>
      </categories>
      <tags>
        <tag>blockchain</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浅到不能再浅的浅析HTTP]]></title>
    <url>%2F2018%2F05%2F22%2Fhttp-protocol%2F</url>
    <content type="text"><![CDATA[最近在搞Acsh平台下的Dapp，兜兜转转发现不就是写一个Web应用的前端嘛，然后我就开始了我的苦逼的前端的学习生涯。吾生也有涯而知无涯也。。。吐槽一句，前端真不是一个程序员干的活，这个东西太杂了，这个真的是太杂了，一星期内我接触了Html, CSS, JavaScript, jQuery, Ajax, JSON整个人像打鸡血了似的，晚上脑子沉沉的睡不着，这个真的太杂了，迟早要疯。今天在来看看HTTP的请求与响应，天下文章一大抄，没啥好说的。 HTTP内容HTTP定义了与服务器交互的不同方法，最基本的方法有4种，分别是GET，POST，PUT，DELETE。URL全称是资源描述符。我们可以这样认为： 一个URL地址，它用于描述一个网络上的资源，而HTTP中的GET，POST，PUT，DELETE就对应着对这个资源的 查，改，增，删 4个操作。 GET方法； POST方法； PUT方法； DELETE方法。 HEAD方法； TRACE方法； OPTIONS方法； 这里只总结最常用的 查，改，增。GET一般用于获取/查询资源信息，POST一般用于更新资源信息，PUT用于建一个由所请求的URL命名的新文档。 GET方法Get是最常用的方法，通常用于请求服务器发送某个资源，而且应该是安全的和幂等的。 所谓安全是指该操作用于获取信息而非修改信息。换句话说，GET请求一般不应产生副作用。就是说，它仅仅是获取资源信息，就像数据库查询一样，不会修改和增加数据，不会影响资源的状态。 1注意：这里安全的含义仅仅是指是非修改信息。 幂等是指对同一个URL的多个请求应该返回同样的结果。 POST方法POST方法向服务器提交数据，比如完成表单数据的提交，将数据提交给服务器处理。 PUT方法PUT方法是让服务器用请求的主体部分来创建一个由所请求的URL命名的新文档；如果那个文档存在的话，就用这个主体来代替它。 DELETE方法DELETE方法就是请求服务器删除指定URL所对应的资源。但是，客户端无法保证删除操作一定会被执行，因为HTTP规范允许服务器在不通知客户端的情况下撤销请求。 HEAD方法HEAD方法与GET方法的行为很类似，但服务器在响应中只返回实体的主体部分。这就允许客户端在未获取实际资源的情况下，对资源的首部进行检查， 使用HEAD，我们可以更高效的完成以下工作： 在不获取资源的情况下，了解资源的一些信息，比如资源类型； 通过查看响应中的状态码，可以确定资源是否存在； 通过查看首部，测试资源是否被修改。 TRACE方法TRACE方法会在目的服务器端发起一个“回环”诊断，我们都知道，客户端在发起一个请求时，这个请求可能要穿过防火墙、代理、网关、或者其它的一些应用程序。这中间的每个节点都可能会修改原始的HTTP请求，TRACE方法允许客户端在最终将请求发送服务器时，它变成了什么样子。由于有一个“回环”诊断，在请求最终到达服务器时，服务器会弹回一条TRACE响应，并在响应主体中携带它收到的原始请求报文的最终模样。这样客户端就可以查看HTTP请求报文在发送的途中，是否被修改过了。 OPTIONS方法OPTIONS方法用于获取当前URL所支持的方法。若请求成功，则它会在HTTP头中包含一个名为“Allow”的头，值是所支持的方法，如“GET, POST”。 GET和POST的区别：GET请求的数据会附在URL之后（就是把数据放置在HTTP协议头中），以？分割URL和传输数据，参数之间以&amp;相连，如：login.action?name=hyddd&amp;password=idontknow&amp;verify=%E4%BD%A0%E5%A5%BD。如果数据是英文字母或数字，则原样发送；如果是空格，转换为+；如果是中文或其他字符，则直接把字符串用BASE64编码，得出如：%E4%BD%A0%E5%A5%BD，其中％XX中的XX为该符号以16进制表示的ASCII码值。(GET这个操作太骚了，这么粗暴，果然是真的只能用于查询，提交注册信息等表格你敢使用他，要死多惨啊。)而与之对应的，POST把提交的数据放置在HTTP包的包体中。 POST的安全性要比GET的安全性高。注意：这里所说的安全性和上面GET提到的“安全”不是同个概念。上面“安全”的含义仅仅是不作数据修改，而这里安全的含义是真正的Security的含义。比如：通过GET提交数据，用户名和密码将明文出现在URL上，因为： 登录页面有可能被浏览器缓存， 其他人查看浏览器的历史纪录，那么别人就可以拿到你的账号和密码了，除此之外，使用GET提交数据还可能会造成Cross-site request forgery攻击（CSRF,跨站请求伪造，也被称为：one click attack/session riding）。 GET和POST的误区：POST可以比GET提交更多更长的数据？由于使用GET方法提交数据时，数据会以&amp;符号作为分隔符的形式，在URL后面添加需要提交的参数，有人会说，浏览器地址栏输入的参数是有限的，而POST不用再地址栏输入，所以POST就比GET可以提交更多的数据。难道真的是这样的么？而实际上，URL不存在参数上限的问题，HTTP协议规范没有对URL长度进行限制。这个限制是特定的浏览器及服务器对它的限制。IE对URL长度的限制是2083字节(2K+35)。对于其他浏览器，如Netscape、FireFox等，理论上没有长度限制，其限制取决于操作系统的支持。所以POST也是没有大小长度限制的，HTTP协议规范也没有进行大小限制。起限制作用的是服务器的处理能力。 总归一句话，这个限制是针对所有HTTP请求的，与GET、POST没有多少关系。 创建和更新某个URL代表的资源创建和更新某个URL代表的资源的时候，是用HTTP的PUT还是POST?摘抄自：http://www.cnblogs.com/shanyou/archive/2011/10/17/2215930.html 其实，用PUT还是POST，不是看这是创建还是更新资源的动作，这不是风格的问题，而是语义的问题。在HTTP中，PUT被定义为幂等（idempotent）的方法，POST则不是，这是一个很重要的区别。如果一个方法重复执行多次，产生的效果是一样的，那就是 idempotent 的。 举一个简单的例子，假如由一个博客系统提供一个Web API，模式是 http://superblogging/blogs/post/{blog-name} 。很简单，将{blog-name}替换为我们的blog名字，往这个URI发送一个HTTP PUT或者POST请求，HTTP的body部分就是博文，我们应该用PUT方法还是POST方法？取决于这个服务的行为是否是idempotent的，假如我们发送两个http://superblogging/blogs/post/Sample请求，服务器端是什么样的行为？如果产生了两个博客帖子，那就说明这个服务不是idempotent的，因为多次使用产生了副作用(POST)；如果后一个请求把第一个请求覆盖掉了，那这个服务就是idempotent的(PUT)。前一种情况，应该使用POST方法，后一种情况，应该使用PUT方法。 参考 asch_http_interface.md 详解HTTP GET请求 完整的HTTP请求会经历以下过程 浅谈HTTP中GET、POST用法以及它们的区别]]></content>
      <categories>
        <category>Computer Network</category>
      </categories>
      <tags>
        <tag>HTTP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[区块链文章（持续更新中.....）]]></title>
    <url>%2F2018%2F05%2F20%2Fblockchain-paper%2F</url>
    <content type="text"><![CDATA[本来没有为区块链方面的文章再写一篇博客，但是考虑到武汉大学的密码学与区块链技术实验室时不时登陆不进去，我还是麻烦一点自己把数据保存下来，这个是按年份整理的，正好和上面那个按方向整理的形成对照，希望我可以坚持看完。不得不吐槽，学术界也是势利眼啊，这两年文章真的可以用井喷来形容了。 文章目录 2008 2013 2014 2015 2016 2017 2018 2018 Abdellah Ouaguid, Noreddine Abghour, Mohammed Ouzzif, A Novel Security Framework for Managing Android Permissions Using Blockchain Technology, International Journal of Cloud Applications and Computing (IJCAC), DOI: 10.4018/IJCAC.2018010103. Muhamed Turkanovic, Marko Holbl, Kristjan Kosic, Marjan Hericko, Aida Kamisalic, EduCTX: A blockchain-based higher education credit platform, IEEE Access (2018), DOI: 10.1109/ACCESS.2018.2789929. Shuangyu He, Qianhong Wu, Xizhao Luo, Zhi Liang, Dawei Li, Hanwen Feng, Haibin Zheng, Yanan Li, A Social-Network-based Cryptocurrency Wallet Management Scheme, IEEE Access (2018), DOI: 10.1109/ACCESS.2018.2799385. Valentina Gatteschi, Fabrizio Lamberti, Claudio Demartini, Chiara Pranteda, Victor Santamaria, Blockchain and Smart Contracts for Insurance: Is the Technology Mature Enough?, Future Internet (2018), DOI: 10.3390/fi10020020. Yupin Lin, Joy R. Petway, Wanyu Lien, Josef Settele, Blockchain with Artificial Intelligence to Efficiently Manage Water Use under Climate Change, Environment (2018), DOI: 10.3390/environments5030034. Lee Won Park, Sanghoon Lee, and Hangbae Chang, A Sustainable Home Energy Prosumer-Chain Methodology with Energy Tags over the Blockchain, Sustainability (2018), DOI: 10.3390/su10030658. Lynn Batten, Xun Yi, Off-line digital cash schemes providing untraceability, anonymity and change, Electronic Commerce Research (2018), DOI: 10.1007/s10660-018-9289-8. Cha, Shi-Cho, et al , A Blockchain Connected Gateway for BLE-based Devices in the Internet of Things, IEEE Access (2018), DOI: 10.1109/ACCESS.2018.2799942. Yanqi Zhao, Yannan Li, Qilin Mu, Bo Wang, Yong Yu, Secure Pub-Sub: Blockchain-based Fair Payment with Reputation for Reliable Cyber Physical Systems, IEEE Access (2018), DOI: 10.1109/ACCESS.2018.2799205. Jie Xiao, Jungang Lou, Jianhui Jiang, Xiaoxin Li, Xuhua Yang, Yujiao Huang, Blockchain Architecture Reliability-Based Measurement for Circuit Unit Importance, IEEE Access (2018), DOI: 10.1109/ACCESS.2018.2800712. Oscar Novo, Blockchain Meets IoT: an Architecture for Scalable Access Management in IoT, IEEE Internet of Things Journal (2018), DOI: 10.1109/JIOT.2018.2812239. Xiaohong Huang, Cheng Xu, Pengfei Wang, Hongzhe liu, LNSC: A Security Model for Electric Vehicle and Charging Pile Management based on Blockchain Ecosystem, IEEE Access (2018), DOI: 10. 1109/ACCESS. 2018. 2812716. Katiuscia Mannaro, Gavina Baralla*, Andrea Pinna and Simona Ibba, A Blockchain Approach Applied to a Teledermatology Platform in the Sardinian Region (Italy), Information (2018), DOI: 10.3390/info9020044. Tien Tuan Anh Dinh, Rui Liu, Meihui Zhang, Gang Chen, Beng Chin Ooi, Ji Wang, Untangling Blockchain: A Data Processing View of Blockchain Systems, IEEE Transactions on Knowledge and Data Engineering (2018), http://arxiv.org/abs/1708.05665. Yining Hu, Ahsan Manzoor, Parinya Ekparinya, Madhusanka Liyanage, Kanchana Thilakarathna, Guillaume Jour jon, Aruna Seneviratne, Mika E.Ylianttila, A Delay-Tolerant Payment Scheme Based on the Ethereum Blockchain, CoRR (2018), http://arxiv.org/abs/1801.10295. Elli Androulaki, Artem Barger, Vita Bortnikov, Christian Cachin, Konstantinos Christidis, Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains, CoRR (2018), http://arxiv.org/abs/1801.10228. Jianchao Hou, Haicheng Wang, and Pingkuo Liu, Applying the blockchain technology to promote the development of distributed photovoltaic in China, International Journal of Energy Research (2018), http://sci-hub.tw/10.1002/er.3984. Olivier Boireau, Securing the blockchain against hackers, Network Security (2018), http://sci-hub.tw/10.1016/S1353-4858(18)30006_0. Wang, Shen Wang, Ahmad Taha, Jianhui Wang, Blockchain-Assisted Crowdsourced Energy Systems, CoRR (2018), http://arxiv.org/abs/1802.03099. Olivier Alphand, Michele Amoretti, Timothy Claeys, Simone Dall ‘Asta, Andrzej Duda, IoTChain: A Blockchain Security Architecture for the Internet of Things, IEEE Wireless Communications and Networking Conference (2018), https://hal.archives-ouvertes.fr/hal-01705455. Deepak Puthal, Nisha Malik, Saraju P. Mohanty, Elias Kougianos, Chi Yang, The Blockchain as a Decentralized Security Framework [Future Directions], IEEE Consumer Electronics Magazine (2018), http://ieeexplore.ieee.org/abstract/document/8287055. Gaby G.Dagher, Jordan Mohler, Matea Milojkovic, Praneeth Babu Marella, Ancile: Privacy-preserving Framework for Access Control and Interoperability of Electronic Health Records Using Blockchain Technology, Sustainable Cities and Society(2018), https://doi.org/1016/j.scs.2018.02.014. Ephraim Feig, A Framework for Blockchain-Based Applications, Computer Science (2018), https://arxiv.org/abs/1803.00892. Yuan Lu, Qiang Tang, Guiling Wang, ZebraLancer: Private and Anonymous Crowdsourcing System atop Open Blockchain, Computer Science (2018), https://arxiv.org/abs/1803.01256. Daniel Martens, Walid Maalej, ReviewChain: Untampered Product Reviews on the Blockchain, Computer Science (2018), https://arxiv.org/abs/1803.01661. Patrick McCorry, Alexander Hicks, Sarah Meiklejohn, Smart Contracts for Bribing Miners, ICAR Cryptology ePrint Archive (2018), http://fc18.ifca.ai/bitcoin/papers/bitcoin18-final14. Fan Zhang, Philip Daian, Iddo Bentov, Ari Juels, Paralysis Proofs: Safe Access-Structure Updates for Cryptocurrencies and More, ICAR Cryptology ePrint Archive (2018), https://eprint.iacr.org/2018/096. Marie Vasek, Tyler Moore, Analyzing the Bitcoin Ponzi Scheme Ecosystem, ICAR Cryptology ePrint Archive (2018), https://fc18.ifca.ai/bitcoin/papers/bitcoin18-final11. Alexander Chepurnoy, Vasily Kharin, Dmitry Meshkov, A Systematic Approach To Cryptocurrency Fees, ICAR Cryptology ePrint Archive (2018), https://fc18.ifca.ai/bitcoin/papers/bitcoin18-final18. Ze Wang, Jingqiang Lin, Quanwei Cai, Blockchain-based Certificate Transparency and Revocation Transparency, ICAR Cryptology ePrint Archive (2018), https://fc18.ifca.ai/bitcoin/papers/bitcoin18-final29. Sarah Azouvi, Mary Maller, Sarah Meiklejohn, Egalitarian Society or Benevolent Dictatorship: The State of Cryptocurrency Governance, ICAR Cryptology ePrint Archive (2018), http://www0.cs.ucl.ac.uk/staff/S.Meiklejohn/files/bitcoin18b. Joseph Bonneau, Hostile Blockchain Takeovers (Short Paper), ICAR Cryptology ePrint Archive (2018), https://fc18.ifca.ai/bitcoin/papers/bitcoin18-final17. Matthias Grundmann, Till Neudecker, Hannes Hartenstein, Exploiting Transaction Accumulation and Double Spends for Topology Inference in Bitcoin, https://fc18.ifca.ai/bitcoin/papers/bitcoin18-final10. Alexei Zamyatin, Nicholas Stifter, Aljosha Judmayer, Philipp Schindler, Edgar R. Weippl, William J. Knottenbelt, (Short Paper) A Wild Velvet Fork Appears! Inclusive Blockchain Protocol Changes in Practice, IACR Cryptology ePrint Archive (2018), http://eprint.iacr.org/2018/087. Narula Neha, Willy Vasquez, Madars Virza, zkLedger: Privacy-Preserving Auditing for Distributed Ledgers, IACR Cryptology ePrint Archive (2018), https://eprint.iacr.org/2018/241. Peter Gazi, Aggelos Kiayias, Alexander Russell, Stake-Bleeding Attacks on Proof-of-Stake Blockchains, IACR Cryptology ePrint Archive (2018), http://eprint.iacr.org/2018/248. Sheng Wang, Tien Tuan Anh Dinh, Qian Lin, Zhongle Xie, Meihui Zhang, Qingchao Cai, ForkBase: An Efficient Storage Engine for Blockchain and Forkable Applications, Computer Science (2018), https://arxiv.org/abs/1802.04949. Tshilidzi Marwala, Bo Xing, Blockchain and Artificial Intelligence, Computer Science (2018), https://arxiv.org/abs/1802.04451. Chen, Yongle Chen, Hui Li, Kejiao Li, Jiyang Zhang, An improved P2P file system scheme based on IPFS and Blockchain, IEEE International Conference (2017), DOI: 10.1109/BigData.2017.8258226. Kai Fan, Yanhui Ren, Yue Wang, Hui Li, Yingtang Yang, Blockchain-based efficient privacy preserving and data sharing scheme of content-centric network in 5G, IET Communications (2017), DOI: 10.1049/iet-com. Kotobi, Khashayar, and Sven G. Bilen, Secure Blockchains for Dynamic Spectrum Access: A Decentralized Database in Moving Cognitive Radio Networks Enhances Security and User Access, IEEE Vehicular Technology Magazine (2018), DOI: 10.1109/MVT.2017.2740458. Eli Ben-Sasson, Iddo Bentov, Yinon Horesh, Michael Riabzey. Scalable, transparent, and post-quantum secure computational integrity, IACR Cryptology ePrint Archive (2017), http://eprint.iacr.org/2018/046. Shunli Ma, Yi Deng, Debiao He, Jiang Zhang, Xiang Xie, An Efficient NIZK Scheme for Privacy-Preserving Transactions over Account-Model Blockchain, IACR Cryptology ePrint Archive (2017), http://eprint.iacr.org/2017/1239. Sergi Delgado Segura, Cristina Perez-Sola, Guillermo Navarro-Arribas, Analysis of the Bitcoin UTXO set, ICAR Cryptology ePrint Archive (2017), https://eprint.iacr.org/2017/1095. Sean Bowe, Ariel Gabizon, Matthew D. Green, A multi-party protocol for constructing the public parameters of the Pinocchio zk-SNARK, ICAR Cryptology ePrint Archive (2017), https://z.cash/downloads/mpc_whitepaper. Seb Neumayer, Mayank Varia, Ittay Eyal, An Analysis of Acceptance Policies For Blockchain Transactions, IACR Cryptology ePrint Archive (2017), http://eprint.iacr.org/2018/040. Pawel Szalachowski, Blockchain-based TLS Notary Service, Cryptography and Security (cs.CR), https://arxiv.org/abs/1804.00875. Mennan Selimi, Aniruddh Rao Kabbinale, Anwaar Ali, Leandro Navarro, Arjuna Sathiaseelan, Towards Blockchain-enabled Wireless Mesh Networks, Networking and Internet Architecture (cs.NI), https://arxiv.org/abs/1804.00561. Mingjun Dai, Shengli Zhang, Hui Wang, Shi Jin, A Low Storage Room Requirement Framework for Distributed Ledger in Blockchain, IEEE Access, DOI: 10.1109/ACCESS.2018.2814624. Gaoqi Liang, Steven R. Weller, Fengji Luo, Junhua Zhao, Distributed Blochchain-Based Data Protection Framework for Modern Power Systems against Cyber Attacks, IEEE Transactions on Smart Grid, DOI: 10.1109/TSG.2018.2819663. Runchao Han, Vincent Gramoli, Xiwei Xu, Evaluating Blockchains for IOT, New Technologies, Mobility and Security (NTMS), 2018 9th IFIP International Conference on, DOI: 10.1109/NTMS.2018.8328736. Yi Liu, Xingtong Liu, Chaojing Tang, Jian Wang, Lei Zhang, Unlinkable Coin Mixing Scheme For Transaction Privacy Enhancement of Bitcoin, IEEE Access (Early Access), DOI: 10.1109/ACCESS.2018.2827163. Feng Gao, Liehuang Zhu, Meng Shen, Kashif Sharif, Zhiguo Wan, Kui Ren, A Blockchain-Based Privacy-Preserving Payment Mechanism for Vehicle-to-Grid Networks, IEEE Network (Early Access), DOI: 10.1109/MNET.2018.1700269. M. Padmavathi, R. M. Suresh, Secure P2P Intelligent Network Transaction using Litecoin, Springer US, http://sci-hub.tw/10.1007/s11036-018-1044-9. Jun Zou, Bin Ye, Lie Qu, Yan Wang, Mehmet Orgun, Lei Li, A Proof-of-Trust Consensus Protocol for Enhancing Accountability in Crowdsourcing Services, IEEE Transactions on Services Computing, DOI: 10.1109/TSC.2018.2823705. Jin Hyeong Jeon, Ki-Hyung Kim, Jai-Hoon Kim, Block chain based data security enhanced IoT server platform, Information Networking (ICOIN), DOI: 10.1109/ICOIN.2018.8343262. Arnob Ghosh, Vaneet Aggarwal, and Hong Wan, Exchange of Renewable Energy among Prosumers using Blockchain with Dynamic Pricing, Computer Science and Game Theory (cs.GT), https://arxiv.org/abs/1804.08184. Vishal Patel, A framework for secure and decentralized sharing of medical imaging data via blockchain consensus, Health Informatics Journal, http://sci-hub.tw/10.1177/1460458218769699. Francesco Parino, Mariano G. Beir´o, and Laetitia Gauvin, Analysis of the Bitcoin blockchain: Socio-economic factors behind the adoption, Physics and Society (physics.soc-ph), https://arxiv.org/abs/1804.07657. Federico Matteo Bencic, Ivana Podnar Zarko, Distributed Ledger Technology: Blockchain Compared to Directed Acyclic Graph, Distributed, Parallel, and Cluster Computing (cs.DC), https://arxiv.org/abs/1804.10013. Ronghua Xu, Yu Chen, Erik Blasch, Genshe Chen, BlendCAC: A BLockchain-ENabled Decentralized Capability-based Access Control for IoTs, Networking and Internet Architecture (cs.NI), https://arxiv.org/abs/1804.09267. Yutao Jiao, Ping Wang, Dusit Niyato, Kongrath Suankaewmanee, Auction Mechanisms in Cloud/Fog Computing Resource Allocation for Public Blockchain Networks, Computer Science and Game Theory (cs.GT), https://arxiv.org/abs/1804.09961 Yi Liu, Xingtong Liu, Chaojing Tang, Jian Wang, Lei Zhang, Unlinkable Coin Mixing Scheme For Transaction Privacy Enhancement of Bitcoin, IEEE Access (Early Access), DOI:10.1109/ACCESS.2018,2827163. Gowri Sankar Ramachandran, Bhaskar Krishnamachari, Blockchain for the IoT: Opportunities and Challenges, Distributed, Parallel, and Cluster Computing (cs.DC), https://arxiv.org/abs/1905.02818. 2017 [BR] Bhattacharya, Rituparna, Martin White, and Natalia Beloff. A blockchain based peer-to-peer framework for exchanging leftover foreign currency Computing Conference, 2017. IEEE, 2017. [WY] Wu Y. An E-voting System based on Blockchain and Ring Signature. University of Birmingham, 2017. [KR] Khalil, Rami, and Arthur Gervais. Revive: Rebalancing Off-Blockchain Payment Networks Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2017. [LJ] Lee, Jong-Hyouk. BIDaaS: Blockchain based ID as a Service IEEE Access, 2017. [YR] Yu, Ruiguo, et al. Authentication With Block-Chain Algorithm and Text Encryption Protocol in Calculation of Social Network IEEE Access 5 (2017): 24944-24951. [SH] Shafagh, Hossein, Anwar Hithnawi, and Simon Duquennoy. Towards Blockchain-based Auditable Storage and Sharing of IoT Data [CT] Chen, Ting, et al. An Adaptive Gas Cost Mechanism for Ethereum to Defend Against Under-Priced DoS Attacks International Conference on Information Security Practice and Experience. Springer, Cham, 2017. [HX] Han, Xuan, Yamin Liu, and Haixia Xu. A User-Friendly Centrally Banked Cryptocurrency International Conference on Information Security Practice and Experience. Springer, Cham, 2017. [TH]Tian, Haibo, Jiejie He, and Liqing Fu. Contract Coin: Toward Practical Contract Signing on Blockchain International Conference on Information Security Practice and Experience. Springer, Cham, 2017. [ZW] Zhang, Wentao, et al. TTP-free Fair Exchange of Digital Signatures with Bitcoin International Conference on Information Security Practice and Experience. Springer, Cham, 2017. [YC]&nbsp;Yang, Changsong, Xiaofeng Chen, and Yang Xiang. Blcokchain-Based Publicly Verifiable Data Deletion Scheme for Cloud Storage Journal of Network and Computer Applications (2017). [AD] Ali Dorri, Salil S. Kanhere, Raja Jurdak,et al. LSB: A Lightweight Scalable BlockChain for IoT Security and Privacy Cryptography and Security (2017). [GP]Giungato, Pasquale, et al. Current Trends in Sustainability of Bitcoins and Related Blockchain Technology Sustainability 9.12 (2017): 2214. [DP]&nbsp;de la Rocha G&oacute;mez-Arevalillo A, Papadimitratos P. Blockchain-based Public Key Infrastructure for Inter-Domain Secure Routing. [KM]&nbsp;Khan, Minhaj Ahmad, and Khaled Salah. IoT security: Review, blockchain solutions, and open challenges Future Generation Computer Systems (2017). [AI]Abraham, Ittai, et al. Solida: A Blockchain Protocol Based on Reconfigurable Byzantine Consensus [PA] Andrea, and Simona Ibba. A blockchain-based Decentralized System for proper handling of temporary Employment contracts [DP]Danzi, Pietro, et al. Analysis of the Communication Traffic for Blockchain Synchronization of IoT Devices [KNSC]Kim, Nam Ho, Sun Moo Kang, and Choong Seon Hong. Mobile charger billing system using lightweight Blockchain Network Operations and Management Symposium (APNOMS), 2017 19th Asia-Pacific. IEEE, 2017. [CR]Chen, Rui-Yang. A traceability chain algorithm for artificial neural networks using T-S fuzzy cognitive maps in blockchain [LH]Li, Huige, et al. A Searchable Symmetric Encryption Scheme using BlockChain [PC]Perone, Christian S. Towards ECDSA key derivation from deep embeddings for novel Blockchain applications [BS]Bano, Shehar, et al. Consensus in the Age of Blockchains [GAMA]Gkaniatsou, Andriana, Myrto Arapinis, and Aggelos Kiayias. &quot;Low-Level Attacks in Bitcoin Wallets&quot;&nbsp;International Conference on Information Security. Springer, Cham, 2017. [LQX]Lu, Qinghua, and Xiwei Xu. &quot;Adaptable Blockchain-Based Systems: A Case Study for Product Traceability&quot;&nbsp;IEEE Software&nbsp;34.6 (2017): 21-27. [AGK]Akcora C G, Gel Y R, Kantarcioglu M. Blockchain: A Graph Prime [KTO]&nbsp;Kuo T T, Kim H E, Ohno-Machado L. Blockchain distributed ledger technologies for biomedical and health care applications Journal of the American Medical Informatics Association, 2017. [ADM]Alexopoulos N, Daubert J, M&uuml;hlh&auml;user M, et al. Beyond the Hype: On Using Blockchains in Trust Management for Authentication //Trustcom/BigDataSE/ICESS, 2017 IEEE. IEEE, 2017: 546-553. [RS]&nbsp;Romano D, Schmid G. Beyond Bitcoin: A Critical Look at Blockchain-Based Systems Cryptography, 2017, 1(2): 15. [ACC] Augot D, Chabanne H, Chenevier T, et al. A User-Centric System for Verified Identities on the Bitcoin Blockchain//Data Privacy Management, Cryptocurrencies and Blockchain Technology Springer, Cham, 2017: 390-407. [DLZ17] Dinh T T A, Liu R, Zhang M, et al. Untangling Blockchain: A Data Processing View of Blockchain Systems [KUE17] Knirsch F, Unterweger A, Engel D. Privacy-preserving blockchain-based electric vehicle charging with dynamic tariff decisions Computer Science-Research and Development, 2017: 1-9.IEEE. IEEE, 2017: 546-553. [ADM17] Alexopoulos N, Daubert J, et al. Beyond the Hype: On Using Blockchains in Trust Management for Authentication //Trustcom/BigDataSE/ICESS, 2017 IEEE. IEEE, 2017: 546-553. [SM17] Suzuki S, Murai J. Blockchain as an Audit-Able Communication Channel //Computer Software and Applications Conference (COMPSAC), 2017 IEEE 41st Annual. IEEE, 2017, 2: 516-522. [JGL17] Jiang P, Guo F, Liang K, et al. Searchain: Blockchain-based private keyword search in decentralized storage Future Generation Computer Systems, 2017. [MNF17] Maurer F K, Neudecker T, Florian M. Anonymous CoinJoin Transactions with Arbitrary Values [WQH17] Wang Q, Qin B, Hu J, et al. Preserving transaction privacy in bitcoin Future Generation Computer Systems, 2017. [SAM17] Symeonidis I, Aly A, Mustafa M A, et al. SePCAR: A Secure and Privacy-Enhancing Protocol for Car Access Provision //European Symposium on Research in Computer Security. Springer, Cham, 2017: 475-493. [LJC17] Li X, Jiang P, Chen T, et al. A Survey on the security of blockchain systems Future Generation Computer Systems, 2017. [PPB17] Park J H, Park J H. Blockchain Security in Cloud Computing: Use Cases, Challenges, and Solutions Symmetry, 2017, 9(8): 164. [K17] Kshetri N. Can Blockchain Strengthen the Internet of Things? IT Professional, 2017, 19(4): 68-72. [LCC17] Lei A, Cruickshank H, Cao Y, et al. Blockchain-Based Dynamic Key Management for Heterogeneous Intelligent Transportation Systems Internet of Things Journal, 2017. [KRB17] Kiyomoto S, Rahman M S, Basu A. On blockchain-based anonymized dataset distribution platform // IEEE, International Conference on Software Engineering Research, Management and Applications. IEEE, 2017:85-92. [SOS17] Sward A, OP_0 V, Stonedahl F. Data Insertion in Bitcoin&#39;s Blockchain 2017. [CXS17] Chao Y, XU M, SI X. Research on A New Signature Scheme on Blockchain [A17] Al-Bassam M. SCPKI: A Smart Contract-based PKI and Identity System // ACM Workshop on Blockchain, Cryptocurrencies and Contracts. ACM, 2017:35-40. [NOE17] Nijeholt H L &Agrave;, Oudejans J, Erkin Z. DecReg: A Framework for Preventing Double-Financing using Blockchain Technology // the ACM Workshop. ACM, 2017:29-34. [XSC17] Chen L, Xu L, Shah N, et al. Unraveling Blockchain based Crypto-currency System Supporting Oblivious Transactions: a Formalized Approach // ACM Workshop on Blockchain, Cryptocurrencies and Contracts. ACM, 2017:23-28. [XSC17] Xu L, Shah N, Chen L, et al. Enabling the Sharing Economy: Privacy Respecting Contract based on Public Blockchain // ACM Workshop on Blockchain, Cryptocurrencies and Contracts. ACM, 2017:15-21. [LSF17] Li W, Sforzin A, Fedorov S, et al. Towards Scalable and Private Industrial Blockchains // ACM Workshop on Blockchain, Cryptocurrencies and Contracts. ACM, 2017:9-14. [KMH17] Kopp H, M&ouml;dinger D, Hauck F, et al. Design of a Privacy-Preserving Decentralized File Storage with Financial Incentivesc//Security and Privacy Workshops (EuroS&amp;PW), 2017 IEEE European Symposium on. IEEE, 2017: 14-22. [TMS17] Toyoda K, Mathiopoulos P T, Sasase I, et al. A Novel Blockchain-Based Product Ownership Management System (POMS) for Anti-Counterfeits in The Post Supply Chain IEEE Access, 2017. [AZV17] Apostolaki M, Zohar A, Vanbever L. Hijacking Bitcoin: Routing Attacks on Cryptocurrencies [TD17] Tomescu A, Devadas S. Catena: Efficient non-equivocation via Bitcoin //IEEE Symp. on Security and Privacy. 2017. [TT17] Tarasov P, Tewari H. Internet Voting Using Zcash [DGK17] David B, Gaži P, Kiayias A, et al. Ouroboros Praos: An adaptively-secure, semi-synchronous proof-of-stake protocol 2017. [PSH17] Prybila C, Schulte S, Hochreiner C, et al. Runtime Verification for Business Processes Utilizing the Bitcoin Blockchain [NSN17] Neisse R, Steri G, Nai-Fovino I. A Blockchain-based Approach for Data Accountability and Provenance Tracking [THW17] Tewari H, Hughes A, Weber S, et al. X509Cloud-Framework for a Ubiquitous PKI [MD17] Mohan M, Devi M K K. Privacy Preserving Non-interactive Proof of Assets for Bitcoin Exchanges Appl. Math, 2017, 11(3): 749-758. [NG17] Natoli C, Gramoli V. The Balance Attack or Why Forkable Blockchains Are Ill-Suited for Consortium [XSC17] Xu L, Shah N, Chen L, et al. Enabling the Sharing Economy: Privacy Respecting Contract based on Public Blockchain //Proceedings of the ACM Workshop on Blockchain, Cryptocurrencies and Contracts. ACM, 2017: 15-21. [LST17] Liang X, Shetty S, Tosh D, et al. ProvChain: A Blockchain-based Data Provenance Architecture in Cloud Environment with Enhanced Privacy and Availability //International Symposium on Cluster, Cloud and Grid Computing, IEEE/ACM. 2017. [CZJ17] Cecchetti E, Zhang F, Ji Y, et al. Solidus: Confidential Distributed Ledger Transactions via PVORM [RC17] Recabarren R, Carbunar B. Hardening Stratum, the Bitcoin Pool Mining Protocol [BP17] Bartoletti M, Pompianu L. An empirical analysis of smart contracts: platforms, applications, and design patterns [TD17] Tomescu A, Devadas S. Catena: Efficient Non-equivocation via Bitcoin [DNY17] Dmitrienko A, Noack D, Yung M. Secure Wallet-Assisted Offline Bitcoin Payments with Double-Spender Revocation [AlBassam17] Al-Bassam M. SCPKI: A Smart Contract-based PKI and Identity System [Conference17] 4th Workshop on Bitcoin and Blockchain Research [Lipton17] Lipton A. Blockchains and Distributed Ledgers in Retrospective and Perspective [CDF17] Chepurnoy A, Duong T, Fan L, et al. TwinsCoin: A Cryptocurrency via Proof-of-Work and Proof-of-Stake [ZEE17] Zhang F, Eyal I, Escriva R, et al. REM: Resource-Efficient Mining for Blockchains [PPM17] Porru S, Pinna A, Marchesi M, et al. Blockchain-oriented Software Engineering: Challenges and New Directions [OAA17] Ouaddah A, Abou Elkalam A, Ait Ouahman A. FairAccess: a new Blockchain‐based access control framework for the Internet of Things Security and Communication Networks, 2017. [MRK17] Moreno-Sanchez P, Ruffing T, Kate A. PathShuffle: Mixing Credit Paths for Anonymous Transactions in Ripple 2017. 2016 [HL16] Hari A, Lakshman T V. The Internet Blockchain: A Distributed, Tamper-Resistant Transaction Framework for the Internet //Proceedings of the 15th ACM Workshop on Hot Topics in Networks. ACM, 2016: 204-210. [HCW16] Huang H, Chen X, Wu Q, et al. Bitcoin-based fair payments for outsourcing computations of fog devices Future Generation Computer Systems, 2016. [KH16] Kim K J, Hong S P. Study on Rule-based Data Protection System Using Blockchain in P2P Distributed Networks International Journal of Security and Its Applications, 2016, 10(11): 201-210. [RM16] Ruffing T, Moreno-Sanchez P. Mixing Confidential Transactions: Comprehensive Transaction Privacy for Bitcoin* [NG16] Natoli C, Gramoli V. The Balance Attack Against Proof-Of-Work Blockchains: The R3 Testbed as an Example [AMV16] Ateniese G, Magri B, Venturi D, et al. Redactable Blockchain-or-Rewriting History in Bitcoin and Friends. IACR Cryptology ePrint Archive, 2016. [AMN16] Abraham I, Malkhi D, Nayak K, et al. Solidus: An Incentive-compatible Cryptocurrency Based on Permissionless Byzantine Consensus arXiv preprint arXiv:1612.02916, 2016. [WL16] Wijaya D A, Liu J K, Steinfeld R, et al. Anonymizing Bitcoin Transaction //International Conference on Information Security Practice and Experience. Springer International Publishing, 2016: 271-283. [BCM16] Bogner A, Chanson M, Meeuw A. A Decentralised Sharing App running a Smart Contract on the Ethereum Blockchain //Proceedings of the 6th International Conference on the Internet of Things. ACM, 2016: 177-178. [HL16] Hari A, Lakshman T V. The Internet Blockchain: A Distributed, Tamper-Resistant Transaction Framework for the Internet //Proceedings of the 15th ACM Workshop on Hot Topics in Networks. ACM, 2016: 204-210. [BK16] Biryukov A, Khovratovich D. Equihash: Asymmetric proof-of-work based on the generalized birthday problem NDSS, 2016. [ZCC16] Zhang F, Cecchetti E, Croman K, et al. Town crier: An authenticated data feed for smart contracts //Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2016: 270-282. [LCO16] Luu L, Chu D H, Olickel H, et al. Making smart contracts smarter //Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2016: 254-269. [KJG16] Kogias E K, Jovanovic P, Gailly N, et al. Enhancing bitcoin security and performance with strong consistency via collective signing //25th USENIX Security Symposium (USENIX Security 16). USENIX Association, 2016: 279-296. [BHM16] Baqer K, Huang D Y, McCoy D, et al. Stressing Out: Bitcoin Stress Testing //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2016: 3-18. [Bonneau16] Bonneau J. Why buy when you can rent? //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2016: 19-26. [TVR16] Turuani M, Voegtlin T, Rusinowitch M. Automated Verification of Electrum Wallet //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2016: 27-42. [HBG16] Heilman E, Baldimtsi F, Goldberg S. Blindly signed contracts: Anonymous on-blockchain and off-blockchain bitcoin transactions //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2016: 43-60. [KLS16] Kiayias A, Lamprou N, Stouka A P. Proofs of Proofs of Work with Sublinear Complexity //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2016: 61-78. [DAK16] Delmolino K, Arnett M, Kosba A, et al. Step by step towards creating a safe smart contract: Lessons and insights from a cryptocurrency lab //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2016: 79-94. [Bonneau16] Bonneau J. EthIKS: Using Ethereum to audit a CONIKS key transparency log //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2016: 95-105. [CDE16] Croman K, Decker C, Eyal I, et al. On scaling decentralized blockchains //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2016: 106-125. [MES16] M&ouml;ser M, Eyal I, Sirer E G. Bitcoin covenants //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2016: 126-141. [BGM16] Bentov I, Gabizon A, Mizrahi A. Cryptocurrencies without proof of work //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2016: 142-157. [LNZ16] Luu L, Narayanan V, Zheng C, et al. A secure sharding protocol for open blockchains //Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2016: 17-30. [Karame16] Karame G. On the Security and Scalability of Bitcoin&amp;#39;s Blockchain //Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2016: 1861-1862. [BSL16] Beck R, Stenum Czepluch J, Lollike N, et al. Blockchain&amp;ndash;The Gateway to Trust-Free Cryptographic Transactions ECIS 2016 Proceedings, 2016: 1-14. [GKW16] Gervais A, Karame G O, W&uuml;st K, et al. On the security and performance of proof of work blockchains //Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2016: 3-16. [MHH16] Matzutt R, Hohlfeld O, Henze M, et al. POSTER: I Don&amp;#39;t Want That Content! On the Risks of Exploiting Bitcoin&amp;#39;s Blockchain as a Content Store //Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2016: 1769-1771. 2015 [DM15] Danezis G, Meiklejohn S. Centrally banked cryptocurrencies. arXiv preprint arXiv:1505.06895, 2015. [JKS15] Juels A, Kosba A, Shi E. The ring of Gyges: Investigating the future of criminal smart contracts //Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. ACM, 2016: 283-295. [ADM15] Andrychowicz M, Dziembowski S, Malinowski D, et al. On the malleability of bitcoin transactions //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2015: 1-18. [MB15] M&ouml;ser M, B&ouml;hme R. Trends, tips, tolls: A longitudinal study of Bitcoin transaction fees //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2015: 19-33. [AML15] Ali S T, McCorry P, Lee P H J, et al. ZombieCoin: powering next-generation botnets with bitcoin //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2015: 34-48. [Tromp15] Tromp J. Cuckoo Cycle: a memory bound graph-theoretic proof-of-work //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2015: 49-62. [LJG15] Laszka A, Johnson B, Grossklags J. When bitcoin mining pools run dry //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2015: 63-77. [VGJ15] Vandervort D, Gaucas D, St Jacques R. Issues in Designing a Bitcoin-like Community Currency //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2015: 78-91. [Hileman15] Hileman G. The bitcoin market potential index //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2015: 92-93. [MLS15] McReynolds E, Lerner A, Scott W, et al. Cryptographic Currencies from a Tech-Policy Perspective: Policy Issues and Technical Directions //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2015: 94-111. [VR15] Valenta L, Rowan B. Blindcoin: Blinded, accountable mixes for bitcoin //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2015: 112-126. [MO15] Meiklejohn S, Orlandi C. Privacy-enhancing overlays in bitcoin //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2015: 127-141. 2014 [SCG14] Sasson E B, Chiesa A, Garman C, et al. Zerocash: Decentralized anonymous payments from bitcoin //Security and Privacy (SP), 2014 IEEE Symposium on. IEEE, 2014: 459-474. [SMZ14] Spagnuolo M, Maggi F, Zanero S. Bitiodine: Extracting intelligence from the bitcoin network //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 457-468. [KKM14] Koshy P, Koshy D, McDaniel P. An analysis of anonymity in bitcoin using p2p network traffic //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 469-485. [BNM14] Bonneau J, Narayanan A, Miller A, et al. Mixcoin: Anonymity for Bitcoin with accountable mixes //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 486-504. [RS14] Ron D, Shamir A. How did dread pirate roberts acquire and protect his bitcoin wealth? //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 3-15. [MBB14] M&ouml;ser M, B&ouml;hme R, Breuker D. Towards risk scoring of Bitcoin transactions //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 16-32. [Vandervort14] Vandervort D. Challenges and opportunities associated with a bitcoin-based transaction rating system //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 33-42. [BP14] Boehm F, Pesch P. Bitcoin: A First Legal Analysis //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 43-54. [VTM14] Vasek M, Thornton M, Moore T. Empirical analysis of denial-of-service attacks in the Bitcoin ecosystem //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 57-71. [JLG14] Johnson B, Laszka A, Grossklags J, et al. Game-theoretic analysis of DDoS attacks against Bitcoin mining pools //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 72-86. [DPH14] Donet J A D, P&eacute;rez-Sola C, Herrera-Joancomart&iacute; J. The bitcoin p2p network //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 87-102. [ADM14] Andrychowicz M, Dziembowski S, Malinowski D, et al. Fair two-party computations via bitcoin deposits //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 105-121. [SMD14] Saxena A, Misra J, Dhar A. Increasing anonymity in bitcoin //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 122-139. [GGM14] Garman C, Green M, Miers I, et al. Rational zero: Economic security for zerocoin with everlasting anonymity //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 140-155. [DNS14] Dmitrienko A, Noack D, Sadeghi A R, et al. On offline payments with bitcoin (poster abstract) //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 159-160. [Heilman14] Heilman E. One Weird Trick to Stop Selfish Miners: Fresh Bitcoins, A Solution for the Honest Miner (Poster Abstract)//International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 161-162. [Hileman14] Hileman G. From bitcoin to the Brixton pound: history and prospects for alternative currencies (poster abstract) //International Conference on Financial Cryptography and Data Security. Springer Berlin Heidelberg, 2014: 163-165. 2013 [MGG13] Miers I, Garman C, Green M, et al. Zerocoin: Anonymous distributed e-cash from bitcoin//Security and Privacy (SP), 2013 IEEE Symposium on. IEEE, 2013: 397-411. 2008 [Bitcoin08] Nakamoto S. Bitcoin: A peer-to-peer electronic cash system. 2008.]]></content>
      <categories>
        <category>Paper</category>
      </categories>
      <tags>
        <tag>blockchain</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[区块链文章集锦]]></title>
    <url>%2F2018%2F05%2F19%2Fpaper-md%2F</url>
    <content type="text"><![CDATA[区块链文章集锦区块链文章整理一下，大势所趋，这方面国内做的比较全的是武汉大学的密码学与区块链技术实验室，可惜的是校内网络，不对外开放，没有办法访问。 Table of Contents General EUROCRYPT2018 Consensus Cryptography Block generation parameters Stake Attacks Wallets Crime Economics Marketplaces and Trust Privacy Sidechains, Higher layer and Scalability Fungibility Network Smart Contracts Formal Methods Proof of work Survey, Sociological &amp; Anthropological Applications General Bitcoin: A Peer-to-Peer Electronic Cash System. Nakamoto S. ‘08. [Google scholar index:3379, 2018-5-23]. SoK: Research Perspectives and Challenges for Bitcoin and Cryptocurrencies. Bonneau J, Miller A, Clark J, Narayanan A, Kroll JA, Felten EW. S&amp;P ‘15. [Google scholar index:297, 2018-5-23]. eurocrypt2018 Simple Proofs of Sequential Work简单的连续工作证明Krzysztof Pietrzak，密码学家、奥地利科学与技术学院研究员。Bram Cohen，BitTorrent创始人、Chia CEO 作者试图通过「空间证明」（Proof of Space）来保证比特币及其他加密货币的安全。「空间证明」是Bram Cohen之前提出的一种取代PoW的工作证明方式。 Thunderella: Blockchains with Optimistic Instant ConfirmationThunderella：区块链理想条件下的瞬间确认Rafael Pass，康奈尔大学计算机科学系副教授 作者介绍了一个全新的算法叫做「Thunderella」。与一般状态机的共识原理不同（状态机相当于一个共识机制的抽象，对分布式网络中大量节点的请求进行确认），Thunderella使得状态机可以在实现快速异步处理的同时，在异常时还可以启动回滚机制。如此一来，状态机的相应速度与同步协议无异，在不出现「拜占庭将军问题」（及大多数人都是诚实的）的情况下，可以做到对交易的瞬间响应。这篇论文中，作者对POW协议下，无需许可和需要许可的设定，提供了一些示例，相应速度可以达到正常上网的体验。不过正如上面所说，这一算法的前提条件是网络中的大部分节点或算力是诚实的，而这里所说的「大部分」指的是不能低于3/4。 But Why Does it Work？A Rational Protocol Design Treatment of Bitcoin?比特币为什么靠得住？关于比特币的理性协议的设计Vassilis Zikas，英国爱丁堡大学区块链技术实验室副主任、副教授 作者试图通过实验来验证RPD（Rational Protocol Design）框架作为一个「理性的密码学框架」在比特币分析中的可用性。众所周知，比特币交易的前提是默认大部分算力（矿工）是诚实的，然而在现实世界中，如何向公众证明大多数人是诚实的却是个难题。在这篇文章中，作者通过对RPD框架部署了一套新的机制，结果显示无论是对矿工添加新的区块进行奖励，还是让他们对挖矿付出代价，诚实的节点总是占大多数。这一结果跟币圈一直以来「矿工总是追求利益最大化」的论调相去甚远。这篇论文的价值在于，由于比特币交易流程的特殊性，以往密码学家没有一个关于合约是如何工作的常用的模型，需要各自开发安全等级上非常过硬的共识算法。这篇文章却改变了这一现状。 Ouroboros Praos: An adaptively-secure, semi-synchronous proof-of-stake blockchain一条自适应安全和半同步POS的区块链 Peter Gaži，IOHK研究员 作者提出了一个新的POS协议——Ouroboros Praos，这个协议可以看作是，针对IOHK之前发布的公链Cardano的升级算法。这一算法第一次实现了半同步条件下对完全自适应腐败（fully-adaptive corruption）的安全保护。尤其是比特币持有者以诚实者占大多数时，黑客可以随时随地对这些人进行「腐化」，这一协议保证了更安全的数字签名，以及对随机函数进行验证的新类别——在而已密钥的生成下，依然保持不可预测。不过，这个协议仅在随机预言机模型的标准加密假设中有效。 Sustained Space Complexity可持续空间模型Jo¨el Alwen，奥地利科学与技术学院研究员 MHF（Memory-hard functions）是一种函数，它的评测成本受存储成本所控制。在硬件设备（如FPGAs、ASICs）上对MHF进行评测，成本不比在x86设备上便宜。作者引入了一个叫做「持续内存机制」（Sustainedmemory Complexity）。这一机制在平行随机预言机中构建。通过n和O两个函数进行运算，其中n代表步骤，O代表存储，函数式为：O(n/log(n))。在每个步骤中，一条询问被放入随机预言机，其他算法也可以将其他随机询问放入随机预言机。其存储为：Ω(n/log(n)) ，步骤为：Ω(n)。 Consensus The Bitcoin Backbone Protocol: Analysis and Applications. Garay J, Kiayias A, Leonardos N. EUROCRYPT ‘15. The Bitcoin Backbone Protocol with Chains of Variable Difficulty. Garay J. Kiayias A, Leonardos N. ‘16. Analysis of the Blockchain Protocol in Asynchronous Networks. Pass R, Seeman L, shelat a. EUROCRYPT ‘17. On Trees, Chains and Fast Transactions in the Blockchain. Kiayias A, Panagiotakos G. ‘16. “RSCoin”: Centrally banked cryptocurrencies. Danezis G, Meiklejohn S. ‘15. Anonymous Byzantine Consensus from Moderately-Hard Puzzles: A Model for Bitcoin. Miller A, LaViola JJ Jr. ‘14. Cryptography On Bitcoin as a public randomness source. Bonneau J, Clark J, Goldfeder S. ‘15. Distributed Cryptography Based on the Proofs of Work. Andrychowicz M, and Dziembowski S. ‘14. Block generation parameters Bootstrapping the Blockchain - Directly. Garay JA, Kiayias A, Leonardos N, Panagiotakos G. ‘16. Speed-Security Tradeoffs in Blockchain Protocols. Kiayias A, Panagiotakos G. ‘15. “GHOST”: Secure High-Rate Transaction Processing in Bitcoin. Sompolinsky Y, Zohar A. FC ‘15. “PHANTOM”: A Scalable BlockDAG protocol. Sompolinsky Y, Zohar A. ‘18. Inclusive Block Chain Protocols. Lewenberg Y, Sompolinsky Y, Zohar A. FC ‘15. On the Security and Performance of Proof of Work Blockchains. Gervais A, Karame GO, Wüst K, Glykantzis V, Ritzdorf H, Capkun S. CCS ‘16. Stake Ouroboros: A provably secure proof-of-stake blockchain protocol. Kiayias A, Russell A, David B, Oliynykov R. ‘16. ALGORAND: The Efficient and Democratic Ledger. Micali S. ‘16. “ByzCoin”: Enhancing Bitcoin Security and Performance with Strong Consistency via Collective Signing. Kogias EK, Jovanovic P, Gailly N, Khoffi I, Gasser L, Ford B. USENIX ‘16. Cryptocurrencies without Proof of Work. Bentov I, Gabizon A, Mizrahi A. FC ‘16. Ouroboros Praos: An adaptively-secure, semi-synchronous proof-of-stake protocol. Bernardo D, Gazi P, Kiayias A, Russell A. Crypto ‘17. Attacks “Selfish Mining”: Majority Is Not Enough: Bitcoin Mining Is Vulnerable. Eyal I, Sirer EG. FC ‘14. Theoretical Bitcoin Attacks with less than Half of the Computational Power. Bahack L. ‘13. Optimal Selfish Mining Strategies in Bitcoin. Sapirshtein A, Sompolinsky Y, Zohar A. FC ‘16. Refund attacks on Bitcoin’s Payment Protocol. McCorry P, Shahandashti S, Hao F. FC ‘16. Wallets Bitcoin Covenants. Möser M, Eyal I, Sirer EG. FC ‘16. Enhancing Bitcoin Transactions with Covenants. O’Connor R, Piekarska M. FC ‘17. Hierarchical deterministic Bitcoin wallets that tolerate key leakage. Gutoski G, Stebila D. FC ‘15. Crime ZombieCoin: Powering Next-Generation Botnets with Bitcoin. Ali ST, McCorry P, Lee PH, Hao F. FC ‘15. The Bitcoin Brain Drain: A Short Paper on the Use and Abuse of Bitcoin Brain Wallets. Vasek M, Bonneau J, Castellucci R, Keith C, Moore T. FC ‘16. Economics On Bitcoin and Red Balloons. Babaioff M, Dobzinski S, Oren S, Zohar A. EC ‘12. On the instability of Bitcoin without the block reward. Carlsten M, Kalodner H, Weinberg SM, Narayanan A. CCS ‘16. Trends, Tips, Tolls: A Longitudinal Study of Bitcoin Transaction Fees. Möser M, Böhme R. FC ‘15. Why buy when you can rent? Bribery attacks on Bitcoin-style consensus. Bonneau J. FC ‘16. Game-Theoretic Analysis of DDoS Attacks Against Bitcoin Mining Pools. Johnson B, Laszka A, Grossklags J, Vasek M, Moore T. FC ‘14. When Bitcoin Mining Pools Run Dry A Game-Theoretic Analysis of the Long-Term Impact of Attacks Between Mining Pools. Laszka A, Johnson B, Grossklags J. FC ‘15. Incentive Compatibility of Bitcoin Mining Pool Reward Functions. Schrijvers O, Bonneau J, Boneh D, Roughgarden T. FC ‘16. When cryptocurrencies mine their own business. Teutsch J, Jain S, Saxena P. FC ‘16. Incentivizing Blockchain Forks via Whale Transactions. Liao K, Katz J. FC ‘17. Smart Contracts Make Bitcoin Mining Pools Vulnerable. Velner Y, Teutsch J, Luu L. FC ‘17. Mixing Coins of Different Quality: A Game-Theoretic Approach. Abramova S, Schöttle P, Böhme R. FC ‘17. Decentralized Prediction Market without Arbiter. Bentov I, Mizrahi A, Rosenfeld M. FC ‘17. Marketplaces and Trust Measuring the Longitudinal Evolution of the Online Anonymous Marketplace Ecosystem. Soska K, Christin N. USENIX ‘15. Escrow protocols for cryptocurrencies: How to buy physical goods using Bitcoin. Goldfeder S, Bonneau J, Gennaro R, Narayanan A. FC ‘17. Trust Is Risk: A Decentralized Financial Trust Platform. Thyfronitis Litos OS, Zindros D. FC ‘17. Trust in decentralized anonymous marketplaces. Zindros D. ‘15. Money as IOUs in social trust networks &amp; a proposal for a decentralized currency network protocol. Fugger R. ‘04. The Ripple protocol consensus algorithm. Schwartz D, Youngs N, Britto A. ‘14. The stellar consensus protocol: A federated model for internet-level consensus. Mazières D. ‘15. There’s No Free Lunch, Even Using Bitcoin: Tracking the Popularity and Profits of Virtual Currency Scams. Vasek M, Moore T. FC ‘15. Challenges and Opportunities Associated with a Bitcoin-based Transaction Rating System. Vandervort D. FC ‘14. Privacy Zerocoin: Anonymous distributed e-cash from bitcoin. Miers I, Garman C, Green M, Rubin AD. S&amp;P ‘13. Zerocash: Decentralized anonymous payments from bitcoin. Sasson EB, Chiesa A, Garman C, Green M, Miers I, Tromer E, Virza M. S&amp;P ‘14. “Monero”: CryptoNote v2.0. Saberhagen N. ‘13? Rational Zero: Economic Security for Zerocoin with Everlasting Anonymity. Garman C, Green M, Miers I, Rubin A. FC ‘14. Mixcoin: Anonymity for bitcoin with accountable mixes. Bonneau J, Narayanan A, Miller A, Clark J, Kroll JA, Felten EW. ‘14. TumbleBit: An untrusted Bitcoin-compatible anonymous payment hub. Heilman E, Alshenibr L, Baldimtsi F, Scafuro A, Goldberg S. ‘16. Blindly Signed Contracts: Anonymous On-Blockchain and Off-Blockchain Bitcoin Transactions. Heilman E, Baldimtsi F, Goldberg S. FC ‘16. Coinshuffle: Practical decentralized coin mixing for bitcoin. Ruffing T, Moreno-Sanchez P, Kate A. ESORICS ‘14. Quantitative analysis of the full bitcoin transaction graph. Ron D, Shamir A. FC ‘13. How Did Dread Pirate Roberts Acquire and Protect His Bitcoin Wealth?. Ron D, Shamir A. FC ‘14. “MoneroLink”: An Empirical Analysis of Linkability in the Monero Blockchain. Miller A, Möser M, Lee K, Narayanan A. ‘17. Provisions: Privacy-preserving proofs of solvency for Bitcoin exchanges. Dagher GG, Bünz B, Bonneau J, Clark J, Boneh D. CCS ‘15. Increasing Anonymity in Bitcoin. Saxena A, Misra J, Dhar A. FC ‘14. Blindcoin Blinded, Accountable Mixes for Bitcoin. Valenta L, Rowan B. FC ‘15. Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts. Kosba A, Miller A, Shi E, Wen Z, Papamanthou C. SP ‘16 Could Network Information Facilitate Address Clustering in Bitcoin?. Neudecker T, Hartenstein H. FC ‘17. Blind signatures for untraceable payments. Chaum D. CRYPTO ‘83. Exchange Pattern Mining in the Bitcoin Transaction Directed Hypergraph. Ranshous S, Joslyn A, Kreyling S, Nowak K, Samatova N, West C, Winters C. FC ‘17. Confidential Assets. Poelstra A, Back A, Friedenbach M, Maxwell G, Wuille P. FC ‘17. Mixing Confidential Transactions: Comprehensive Transaction Privacy for Bitcoin. Ruffing T, Moreno-Sanchez P. FC ‘17. Switch Commitments: A Safety Switch for Confidential Transactions. Ruffing T, Malavolta G. FC ‘17. CoinParty: Secure Multi-Party Mixing of Bitcoins. Ziegeldorf, J.H., Grossmann, F., Henze, M., Inden, N. and Wehrle, K. CODASPY ‘15. Sidechains, Higher layer and Scalability Enabling Blockchain Innovations with Pegged Sidechains. Back A, Corallo M, Dashjr L, Friedenbach M, Maxwell G, Miller A, Poelstra A, Timón J, Wuille P. ‘14. 中文: http://www.8btc.com/enabling-blockchain-innovations-with-pegged-sidechains-a-federated-peg [2018-5-30, Google Scholar Index:200] Proofs of Proofs of Work with Sublinear Complexity. Kiayias A, Lamprou N, Stouka AP. FC ‘16. A Fast and Scalable Payment Network with Bitcoin Duplex Micropayment Channels. Decker C, Wattenhofer R. SSS ‘15. The bitcoin lightning network: Scalable off-chain instant payments. Poon J, Dryja T. ‘15. “Deployable Lightning”: Reaching The Ground With Lightning. Russell R. ‘15. Bitcoin-NG: A Scalable Blockchain Protocol. Eyal I, Gencer AE, Sirer EG, Van Renesse R. USENIX ‘16. [2018-5-30, Google Scholar Index:200] On the Malleability of Bitcoin Transactions. Andrychowicz M, Dziembowski S, Malinowski D, Mazurek Ł. FC ‘15. Teechan: Payment Channels Using Trusted Execution Environments. Lind J, Eyal I, Pietzuch P, Sirer EG. FC ‘17. On Scaling Decentralized Blockchains. Croman K, Decker C, Eyal I, Gencer AE, Juels A, Kosba A, Miller A, Saxena P, Shi E, Sirer EG, Song D. FC ‘16. “Elastico”: A secure sharding protocol for open blockchains. Luu L, Narayanan V, Zheng C, Baweja K, Gilbert S, Saxena P. CCS ‘16. Improving Authenticated Dynamic Dictionaries, with Applications to Cryptocurrencies. Reyzin L, Meshkov D, Chepurnoy A, Ivanov S. FC ‘17. Service-Oriented Sharding for Blockchains. Gencer AE, Van Renesse R, Sirer EG. FC ‘17. Revive: Rebalancing Off-Blockchain Payment Networks. Khalil, R., &amp; Gervais, A. CCS ‘17. Non-Interactive Proofs of Proof-of-Work. Aggelos K, Andrew M, Dionysis Z. ‘17 Fungibility Towards Risk Scoring of Bitcoin Transactions. Möser M, Böhme R, Breuker D. FC ‘14. Network The Bitcoin P2P network. Donet Donet JA, Perez-Sola C, Herrera-Joancomart J. FC ‘14. Empirical Analysis of Denial-of-Service Attacks in the Bitcoin Ecosystem. Vasek M, Thornton M, Moore T. FC ‘14. Eclipse Attacks on Bitcoin’s Peer-to-Peer Network. Heilman E, Kendler A, Zohar A, Goldberg S. USENIX ‘15. Hijacking Bitcoin: Routing Attacks on Cryptocurrencies. Apostolaki M, Zohar A, Vanbever L. S&amp;P ‘17. Stressing Out: Bitcoin “Stress Testing”. Baqer K, Yuxing Huang D, McCoy D, Weaver N. FC ‘16. The Honey Badger of BFT Protocols. Miller A, Xia Y, Croman K, Shi E, Song D. CCS ‘16. Smart Contracts “Ethereum”: A next-generation smart contract and decentralized application platform. Vitalik Buterin. ‘14. [Google scholar index:245, 2018-5-23]. Ethereum: A secure decentralised generalised transaction ledger. Wood G. ‘14. [Google scholar index:454, 2018-5-23]. Fair Two-Party Computations via Bitcoin Deposits. Andrychowicz M, Dziembowski S, Malinowski D, Mazurek Ł. FC ‘14. [Google scholar index:70, 2018-5-23]. Step by Step Towards Creating a Safe Smart Contract: Lessons and Insights from a Cryptocurrency Lab. Delmolino K, Arnett M, Kosba A, Miller A, Shi E. FC ‘16. [Google scholar index:94, 2018-5-23]. EthIKS: Using Ethereum to audit a CONIKS key transparency log. Bonneau J. FC ‘16. [Google scholar index:15, 2018-5-23]. Making Smart Contracts Smarter. Luu L, Chu DH, Olickel H, Saxena P, Hobor A. CCS ‘16. [Google scholar index:121, 2018-5-23]. The Ring of Gyges: Investigating the Future of Criminal Smart Contracts. Juels A, Kosba A, Shi E. CCS ‘16. [Google scholar index:41, 2018-5-23]. Town crier: An authenticated data feed for smart contracts. Zhang F, Cecchetti E, Croman K, Juels A, Shi E. CCS ‘16. [Google scholar index:69, 2018-5-23]. A Smart Contract for Boardroom Voting with Maximum Voter Privacy. McCorry P, Shahandashti SF, Hao F. FC ‘17. [Google scholar index:24, 2018-5-23]. Constant-deposit multiparty lotteries on Bitcoin. Bartoletti M, Zunino R. FC ‘17. [Google scholar index:8, 2018-5-23]. Formal Methods Automated Verification of Electrum Wallet. Turuani M, Voegtlin T, Rusinowitch M. FC ‘16. Proof of work “Proof-of-work”: Pricing via processing or combatting junk mail. Dwork C, Naor M. ‘92. Hashcash - A Denial of Service Counter-Measure. Back A. ‘02. Cuckoo Cycle: a memory bound graph-theoretic proof-of-work. Tromp J. FC ‘15. PieceWork: Generalized Outsourcing Control for Proofs of Work. Daian P, Eyal I, Juels A, Sirer EG. FC ‘17. Permacoin: Repurposing bitcoin work for data preservation. Miller A, Juels A, Shi E, Parno B, Katz J. Permacoin. S&amp;P ‘14. Survey, Sociological &amp; Anthropological Issues in Designing a Bitcoin-Like Community Currency. Vandervort D, Gaucas D, St Jacques R. FC ‘15. The Bitcoin Market Potential Index. Hileman G. FC ‘15. Cryptographic Currencies from a Tech-Policy Perspective: Policy Issues and Technical Direction. McReynolds E, Lerner A, Scott W, Roesner F, Kohno T. FC ‘15. The Other Side of the Coin: User Experiences with Bitcoin Security and Privacy. Krombholz K, Judmayer A, Gusenbauer M, Weippl E. FC ‘16. An analysis of Bitcoin OP_RETURN metadata. Bartoletti M, Pompianu L. FC ‘17. Applications Blockstack Technical Whitepaper. Muneeb A., Ryan S., Jude N, Michael F. ‘17 Storj A Peer-to-Peer Cloud Storage Network. Shawn W., Tome B., Josh B.,James P., Gordon H., Patrick G., Philip H., Chris P. ‘16 IPFS - Content Addressed, Versioned, P2P File System. Benet J. ‘15 BigchainDB: A Scalable Blockchain Database. McConaghy T, Marques R, Müller A, De Jonghe D, McConaghy T, McMullen G, Henderson R, Bellemare S, Granzotto A. ‘17 参考 decrypto-org/blockchain-papers blockchain-university/databank 区块链论文、ICO白皮书 区块链该看哪些会议论文 区块链 - 中文资源 区块链最新顶级论文曝光！来自欧密会上的5篇重磅，统统打包给你]]></content>
      <categories>
        <category>Paper</category>
      </categories>
      <tags>
        <tag>blockchain</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Asch开发日志 0x04 --- ASCH HTTP API文档]]></title>
    <url>%2F2018%2F05%2F17%2Fdebug-20180517-md%2F</url>
    <content type="text"><![CDATA[几个重要参数测试网络地址 testnet:http://localnet:4096 dapp id号 id = cb0535f30bc8ca3128349702d45d5aa704453d1fc6704771122f1c99f7267f43 创世账号 1234genisis account[ &#123; address: 'AK4ChqFGk8sKkK1T9GqvEDK9QgAejknHGS', secret: 'side olympic horse bag gate delay quick dash spice palm place employ', publicKey: 'ec806a8d6661c67291a07eac104f851aa58aff13ed6ae6e26deaeed20960f825' &#125; ] 简单的命令测试区块地址获取dapp区块高度查询示例1curl -k -H "Content-Type: application/json" -X GET http://localhost:4096/api/dapps/cb0535f30bc8ca3128349702d45d5aa704453d1fc6704771122f1c99f7267f43/blocks/height &amp;&amp; echo JSON返回示例： {&quot;height&quot;:1480,&quot;success&quot;:true} 获取dapp区块数据查询示例 curl -k -H &quot;Content-Type: application/json&quot; -X GET http://localhost:4096/api/dapps/cb0535f30bc8ca3128349702d45d5aa704453d1fc6704771122f1c99f7267f43/blocks?limit=1 &amp;&amp; echo JSON返回示例： {&quot;blocks&quot;:[{&quot;id&quot;:&quot;de9473a861705bc6393dc59e244cea69a76ebfc955764bc618bfd616ec81ac03&quot;,&quot;timestamp&quot;:0,&quot;height&quot;:1,&quot;payloadLength&quot;:105,&quot;payloadHash&quot;:&quot;83bac4f7fefbbed8045b2e95010bdd286247f85c0f0e1a0fc02cb5fe8a7172cc&quot;,&quot;prevBlockId&quot;:&quot;&quot;,&quot;pointId&quot;:&quot;&quot;,&quot;pointHeight&quot;:0,&quot;delegate&quot;:&quot;ec806a8d6661c67291a07eac104f851aa58aff13ed6ae6e26deaeed20960f825&quot;,&quot;signature&quot;:&quot;965ddf377bbf96818de16e67bdab27e7cad26f82d16ccdd55e41171738c192865cd566e580612184708ba8af0582dd2bf17f2093cea113df415509ccf5e1f107&quot;,&quot;count&quot;:1}],&quot;count&quot;:1558,&quot;success&quot;:true} 账户accounts根据地址获取dapp内账户信息查询示例: 委托人账户信息查询 curl -k -H &quot;Content-Type: application/json&quot; -X GET http://localhost:4096/api/dapps/cb0535f30bc8ca3128349702d45d5aa704453d1fc6704771122f1c99f7267f43/accounts/A2zpxdTgo2Fvtwhmm4KvJLyj1Vmgs7noZB &amp;&amp; echo JSON返回示例： { &quot;account&quot;: { &quot;balances&quot;:[], &quot;extra&quot;:null, &quot;isDelegate&quot;:true }, &quot;success&quot;:true } 请求示例： curl -k -H &quot;Content-Type: application/json&quot; -X GET http://localhost:4096/api/dapps/cb0535f30bc8ca3128349702d45d5aa704453d1fc6704771122f1c99f7267f43/accounts/AK4ChqFGk8sKkK1T9GqvEDK9QgAejknHGS &amp;&amp; echo 返回JSON:1&#123;"account":&#123;"balances":[&#123;"currency":"XCT","balance":"10000000000000000"&#125;,&#123;"currency":"XAS","balance":"100000000000"&#125;,&#123;"currency":"xctime.XCT","balance":"2100000000000"&#125;],"extra":null,"isDelegate":false&#125;,"success":true&#125; 存储storages我发现这个命令还是非常有意思的，这个是不是就是chat room的原型呢？不管这么多了，先去调试一下，看看有什么好玩的东西可以做。 上传数据上传数据(直接上传)接口地址：/api/storages请求方式：PUT支持格式：json接口备注：请求参数说明： 名称 类型 必填 说明 secret string Y asch账户密码 secondSecret string N 发送二级密码，最小长度1，最大长度100 content string Y 上传数据内容 encode string N 上传数据格式，可选项为：raw/base64/hex wait number N 等待确认数，范围为0-6，折中的方案是1 返回参数说明： 名称 类型 说明 success boolean 是否成功获得response数据。 transactionId string 交易ID 调出nodejs调试窗口 &gt;node 将字符串”helloworld”用base64进行编码 console.log(new Buffer(&apos;helloworld&apos;).toString(&apos;base64&apos;)); 返回结果 aGVsbG93b3JsZA== Asch用base64方式存储刚才得到的编码值”aGVsbG93b3JsZA==”,不过要首先退出node. curl -k -H &quot;Content-Type: application/json&quot; -X PUT -d &apos;{&quot;secret&quot;:&quot;side olympic horse bag gate delay quick dash spice palm place employ&quot;,&quot;secondSecret&quot;:&quot; &quot;,&quot;content&quot;:&quot;aGVsbG93b3JsZA==&quot;,&quot;encode&quot;:&quot;base64&quot;,&quot;wait&quot;:1}&apos; http://localhost:4096/api/storages &amp;&amp; echo JSON返回示例： { &quot;success&quot;:true, &quot;transactionId&quot;:&quot;7672ea42e5607c2730a4c3d14f1e340da5b035ade8afee33464345cf69d785b2&quot; } 根据交易id查询存储的数据-1接口地址：/api/storages/get/?id=请求方式：GET支持格式：urlencode请求参数说明：交易id 名称 类型 必填 说明 id string Y 交易id 返回参数说明： 名称 类型 说明 success bool 是否成功获得response数据。 id string 交易id 请求示例： curl -k -H &quot;Content-Type: application/json&quot; -X GET http://localhost:4096/api/storages/get/?id=7672ea42e5607c2730a4c3d14f1e340da5b035ade8afee33464345cf69d785b2 &amp;&amp; echo JSON返回示例：12345678910111213141516171819&#123; "success":true, "id":"7672ea42e5607c2730a4c3d14f1e340da5b035ade8afee33464345cf69d785b2", "height":"16889", "blockId":"4b44dd9fffd5c76b5f0f04089202e916bc708f80e526c259f2cccd425b6af838", "type":8, "timestamp":59467003, "senderPublicKey":"ec806a8d6661c67291a07eac104f851aa58aff13ed6ae6e26deaeed20960f825", "senderId":"AK4ChqFGk8sKkK1T9GqvEDK9QgAejknHGS", "recipientId":"", "amount":0, "fee":10000000, "signature":"9e3fe223a7f5235a079694539414d22bb1939131f70e4fcbedc68264b96c7f13d13632bca0135ddcc3a3d774be5611319e7251341b8eb89caba27f18aae26f01", "signSignature":"", "signatures":null, "confirmations":"18", "args":null, "asset":&#123;"storage":&#123;"content":"68656c6c6f776f726c64"&#125;&#125;&#125; 根据交易id查询存储的数据-2接口地址：/api/storages/id请求方式：GET支持格式：urlencode请求参数说明：交易id备注：与/api/storages/get功能相同 请求示例： curl -k -H &quot;Content-Type: application/json&quot; -X GET http://localhost:4096/api/storages/7672ea42e5607c2730a4c3d14f1e340da5b035ade8afee33464345cf69d785b2 &amp;&amp; echo JSON返回示例： 1234567891011121314151617&#123; "success":true, "id":"7672ea42e5607c2730a4c3d14f1e340da5b035ade8afee33464345cf69d785b2", "height":"16889", "blockId":"4b44dd9fffd5c76b5f0f04089202e916bc708f80e526c259f2cccd425b6af838", "type":8, "timestamp":59467003, "senderPublicKey":"ec806a8d6661c67291a07eac104f851aa58aff13ed6ae6e26deaeed20960f825","senderId":"AK4ChqFGk8sKkK1T9GqvEDK9QgAejknHGS", "recipientId":"", "amount":0, "fee":10000000,"signature":"9e3fe223a7f5235a079694539414d22bb1939131f70e4fcbedc68264b96c7f13d13632bca0135ddcc3a3d774be5611319e7251341b8eb89caba27f18aae26f01", "signSignature":"", "signatures":null, "confirmations":"40", "args":null, "asset":&#123;"storage":&#123;"content":"68656c6c6f776f726c64"&#125;&#125;&#125; 上传数据(签名后再上传)POST接口规格如下： payload为asch-js创建出来的交易数据 接口地址：/peer/transactions请求方式：post支持格式：json请求参数说明： 名称 类型 必填 说明 secret string Y asch账户密码 secondSecret string N 发送者二级密码，最小长度1，最大长度100 content string Y 上传数据内容，必须是hex格式 返回参数说明： 名称 类型 说明 success boolean 是否成功获得response数据。 transactionId string 交易ID 123456789101112131415161718192021222324252627282930313233343536&gt; var AschJS = require('asch-js');// 一级密码&gt; var secret = 'side olympic horse bag gate delay quick dash spice palm place employ'// 二级密码&gt; var secondSecret = 'ruihou123'// 将字符串"helloworld"用 hex 进行编码&gt; var content = new Buffer('hello world').toString('hex')'68656c6c6f20776f726c64'// Asch用hex方式存储刚才得到的编码值"aGVsbG93b3JsZA=="&gt; var trs = AschJS.storage.createStorage(content, secret, secondSecret)&#123; type: 8, amount: 0, fee: 10000000, recipientId: null, senderPublicKey: 'ec806a8d6661c67291a07eac104f851aa58aff13ed6ae6e26deaeed20960f825', timestamp: 59473015, asset: &#123; storage: &#123; content: '68656c6c6f20776f726c64' &#125; &#125;, signature: 'e5b72c2773e7067fb81ee96627d4164b39d1e54926aec005e8e3c6cab07f2ba1f81931aad93e3f215a7c99bd1d3fd6470e8993043211e03fd044de9f16780d09', signSignature: '1633a4f5b6ef14d4b6a237211b998f50bd98780da87abbc2f8bfd7461ae8b75322f64d04b1852fac9adce140dd4054d76fc8d7509cb7617642972126d9282906', id: '88f5602eddf2b019af6b8383e1c3816ef15591ce273a972f3ba9542c8ce1a23e' &#125;&gt; console.log(JSON.stringify(trs))&#123;"type":8,"amount":0,"fee":10000000,"recipientId":null,"senderPublicKey":"ec806a8d6661c67291a07eac104f851aa58aff13ed6ae6e26deaeed20960f825","timestamp":59473015,"asset":&#123;"storage"&#123;"content":"68656c6c6f20776f726c64"&#125;&#125;,"signature":"e5b72c2773e7067fb81ee96627d4164b39d1e54926aec005e8e3c6cab07f2ba1f81931aad93e3f215a7c99bd1d3fd6470e8993043211e03fd044de9f16780d09","signSignature":"1633a4f5b6ef14d4b6a237211b998f50bd98780da87abbc2f8bfd7461ae8b75322f64d04b1852fac9adce140dd4054d76fc8d7509cb7617642972126d9282906","id":"88f5602eddf2b019af6b8383e1c3816ef15591ce273a972f3ba9542c8ce1a23e"&#125; // 将生成的交易信息广播出去，有问题阿 请求示例： &gt; curl -H &quot;Content-Type: application/json&quot; -H &quot;magic:594fe0f3&quot; -H &quot;version:&apos;&apos;&quot; -k -X POST -d &apos;{&quot;transaction&quot;:{&quot;type&quot;:8,&quot;amount&quot;:0,&quot;fee&quot;:10000000,&quot;recipientId&quot;:null,&quot;senderPublicKey&quot;:&quot;fafcd01f6b813fdeb3c086e60bc7fa9bfc8ef70ae7be47ce0ac5d06e7b1a8575&quot;,&quot;timestamp&quot;:59471824,&quot;asset&quot;:{&quot;storage&quot;:{&quot;content&quot;:&quot;68656c6c6f20776f726c64&quot;}},&quot;__assetBytes__&quot;:{&quot;type&quot;:&quot;Buffer&quot;,&quot;data&quot;[]},&quot;signature&quot;:&quot;e5b72c2773e7067fb81ee96627d4164b39d1e54926aec005e8e3c6cab07f2ba1f81931aad93e3f215a7c99bd1d3fd6470e8993043211e03fd044de9f16780d09&quot;,&quot;signSignature&quot;:&quot;1633a4f5b6ef14d4b6a237211b998f50bd98780da87abbc2f8bfd7461ae8b75322f64d04b1852fac9adce140dd4054d76fc8d7509cb7617642972126d9282906&quot;}}&apos; &apos;http://localhost:4096/peer/transactions&apos; &amp;&amp; echo JSON返回示例： { &quot;success&quot;:false, &quot;error&quot;:&quot;SyntaxError: Unexpected token [ in JSON at position 273&quot; } 再次尝试，请求示例： curl -H &quot;Content-Type: application/json&quot; -H &quot;magic:594fe0f3&quot; -H &quot;version:&apos;&apos;&quot; -k -X POST -d &apos;{&quot;transaction&quot;:{&quot;type&quot;:8,&quot;amount&quot;:0,&quot;fee&quot;:10000000,&quot;recipientId&quot;:null,&quot;senderPublicKey&quot;:&quot;fafcd01f6b813fdeb3c086e60bc7fa9bfc8ef70ae7be47ce0ac5d06e7b1a8575&quot;,&quot;timestamp&quot;:59471824,&quot;asset&quot;:{&quot;storage&quot;:{&quot;content&quot;:&quot;68656c6c6f20776f726c64&quot;}},&quot;signature&quot;:&quot;e5b72c2773e7067fb81ee96627d4164b39d1e54926aec005e8e3c6cab07f2ba1f81931aad93e3f215a7c99bd1d3fd6470e8993043211e03fd044de9f16780d09&quot;,&quot;signSignature&quot;:&quot;1633a4f5b6ef14d4b6a237211b998f50bd98780da87abbc2f8bfd7461ae8b75322f64d04b1852fac9adce140dd4054d76fc8d7509cb7617642972126d9282906&quot;}}&apos; &apos;http://localhost:4096/peer/transactions&apos; &amp;&amp; echo JSON返回示例： { &quot;success&quot;:false, &quot;error&quot;:&quot;Failed to verify signature&quot; } 事实说明，Asch团队技术做的还是不错的，就是文档写的有点菜。 正常版本123456789101112131415161718192021222324252627282930313233343536373839404142434445&gt; var AschJS = require('asch-js');// 一级密码&gt; var secret = 'side olympic horse bag gate delay quick dash spice palm place employ'// 二级密码，也可以不加的。如果不加二级密码，调用时// var trs = AschJS.storage.createStorage(content, secret)&gt; var secondSecret = 'ruihou123'// 将字符串"helloworld"用 hex 进行编码&gt; var content = new Buffer('hello world.\n').toString('hex')'68656c6c6f20776f726c642e0a'// Asch用hex方式存储刚才得到的编码值"68656c6c6f20776f726c642e0a"&gt; var trs = AschJS.storage.createStorage(content, secret, secondSecret)&#123; type: 8, amount: 0, fee: 10000000, recipientId: null, senderPublicKey: 'ec806a8d6661c67291a07eac104f851aa58aff13ed6ae6e26deaeed20960f825', timestamp: 59482312, asset: &#123; storage: &#123; content: '68656c6c6f20776f726c642e0a' &#125; &#125;, signature: 'aac9675f760f4b14475eb4cda744683babb9bc40110479d2c1f2538b2e15671092bb73a03f26426ae34b1f86aab2a796c3fe99c493450105b8b1978b31bdeb06', signSignature: 'f09c027024b2adf61fc4b71a69f5e56f86d54feb21b0a9cd726fa8962fe9d5b875192c692842b541cbfda662185dc78d4f9305c065f69479b8ef0281589a7009', id: '3bb763567c88e33a0b31f4d7f04c223408d7d139381141e14a3322c8b3f268cc' &#125;&gt; console.log(JSON.stringify(trs))&#123; "type":8, "amount":0, "fee":10000000, "recipientId":null, "senderPublicKey":"ec806a8d6661c67291a07eac104f851aa58aff13ed6ae6e26deaeed20960f825", "timestamp":59482312, "asset":&#123;"storage":&#123;"content":"68656c6c6f20776f726c642e0a"&#125;&#125;, "signature":"aac9675f760f4b14475eb4cda744683babb9bc40110479d2c1f2538b2e15671092bb73a03f26426ae34b1f86aab2a796c3fe99c493450105b8b1978b31bdeb06", "signSignature":"f09c027024b2adf61fc4b71a69f5e56f86d54feb21b0a9cd726fa8962fe9d5b875192c692842b541cbfda662185dc78d4f9305c065f69479b8ef0281589a7009", "id":"3bb763567c88e33a0b31f4d7f04c223408d7d139381141e14a3322c8b3f268cc"&#125;// console.log(JSON.stringify(trs))生成的JSON文件直接复制到`'&#123;"transaction":***&#125;' 字段`***`中去,注意不要人为换行。&gt; curl -H "Content-Type: application/json" -H "magic:594fe0f3" -H "version:''" -k -X POST -d '&#123;"transaction":&#123;"type":8,"amount":0,"fee":10000000,"recipientId":null,"senderPublicKey":"ec806a8d6661c67291a07eac104f851aa58aff13ed6ae6e26deaeed20960f825","timestamp":59482312,"asset":&#123;"storage":&#123;"content":"68656c6c6f20776f726c642e0a"&#125;&#125;,"signature":"aac9675f760f4b14475eb4cda744683babb9bc40110479d2c1f2538b2e15671092bb73a03f26426ae34b1f86aab2a796c3fe99c493450105b8b1978b31bdeb06","signSignature":"f09c027024b2adf61fc4b71a69f5e56f86d54feb21b0a9cd726fa8962fe9d5b875192c692842b541cbfda662185dc78d4f9305c065f69479b8ef0281589a7009","id":"3bb763567c88e33a0b31f4d7f04c223408d7d139381141e14a3322c8b3f268cc"&#125;&#125;' 'http://localhost:4096/peer/transactions' &amp;&amp; echo&#123; "success":true, "transactionId":"3bb763567c88e33a0b31f4d7f04c223408d7d139381141e14a3322c8b3f268cc"&#125; 查询这笔交易transactionId： curl -k -H &quot;Content-Type: application/json&quot; -X GET http://localhost:4096/api/storages/get/?id=3bb763567c88e33a0b31f4d7f04c223408d7d139381141e14a3322c8b3f268cc &amp;&amp; echo JSON返回示例： 12345678910111213141516171819202122232425262728293031323334&#123; "success":true, // 交易id "id":"3bb763567c88e33a0b31f4d7f04c223408d7d139381141e14a3322c8b3f268cc", // 交易所在区块高度 "height":"18428", // 交易所在区块id "blockId":"ec46f9d759ce3e7bc895617a6ec8ef65fc20c7a799dadf71a7fee6f7e45a837d", // 交易类型，8代表存储信息 "type":8, // 交易时间，举例创世块的offset "timestamp":59482312, // 上传者公钥 "senderPublicKey":"ec806a8d6661c67291a07eac104f851aa58aff13ed6ae6e26deaeed20960f825", // 上传者id "senderId":"AK4ChqFGk8sKkK1T9GqvEDK9QgAejknHGS", // 接受者id？ "recipientId":"", "amount":0, // 交易签名 "fee":10000000, // 交易签名 "signature":"aac9675f760f4b14475eb4cda744683babb9bc40110479d2c1f2538b2e15671092bb73a03f26426ae34b1f86aab2a796c3fe99c493450105b8b1978b31bdeb06", // 二级签名，有二级密码时才有 "signSignature":"f09c027024b2adf61fc4b71a69f5e56f86d54feb21b0a9cd726fa8962fe9d5b875192c692842b541cbfda662185dc78d4f9305c065f69479b8ef0281589a7009", // 多重签名，使用多重签名账户时才有 "signatures":null, // 交易确认数 "confirmations":"12", "args":null, // 数据内容，16进制字符串 "asset":&#123;"storage":&#123;"content":"68656c6c6f20776f726c642e0a"&#125;&#125;&#125; 可以看到，最后一个字段： &quot;asset&quot;:{&quot;storage&quot;:{&quot;content&quot;:&quot;68656c6c6f20776f726c642e0a&quot;}} 对content字段的内容进行解码 // 将得到的16进制（hex）格式的字符串&quot;68656c6c6f776f726c64&quot;转为文本字符串正好是&quot;hello world.\n&quot; console.log(new Buffer(&apos;68656c6c6f776f726c64&apos;,&apos;hex&apos;).toString()); hello world.\n 请求示例： curl -k -H &quot;Content-Type: application/json&quot; -X GET http://localhost:4096/api/storages/3bb763567c88e33a0b31f4d7f04c223408d7d139381141e14a3322c8b3f268cc &amp;&amp; echo JSON返回示例： 123456789101112131415161718&#123; "success":true, "id":"3bb763567c88e33a0b31f4d7f04c223408d7d139381141e14a3322c8b3f268cc", "height":"18428", "blockId":"ec46f9d759ce3e7bc895617a6ec8ef65fc20c7a799dadf71a7fee6f7e45a837d", "type":8, "timestamp":59482312, "senderPublicKey":"ec806a8d6661c67291a07eac104f851aa58aff13ed6ae6e26deaeed20960f825","senderId":"AK4ChqFGk8sKkK1T9GqvEDK9QgAejknHGS", "recipientId":""," "amount":0, "fee":10000000, "signature":"aac9675f760f4b14475eb4cda744683babb9bc40110479d2c1f2538b2e15671092bb73a03f26426ae34b1f86aab2a796c3fe99c493450105b8b1978b31bdeb06", "signSignature":"f09c027024b2adf61fc4b71a69f5e56f86d54feb21b0a9cd726fa8962fe9d5b875192c692842b541cbfda662185dc78d4f9305c065f69479b8ef0281589a7009", "signatures":null, "confirmations":"17", "args":null, "asset":&#123;"storage":&#123;"content":"68656c6c6f20776f726c642e0a"&#125;&#125;&#125; 一点想象空间 存储的数据存储storages,这个接口是不是可以搭建chat room？ 如果可以，后端我应该定义什么样的modle，什么样的data structure, 什么样的contracts？ 一当定制好后端，感觉前端主要的工具应该使用提供的ASCH HTTP API文档做查询queury，这个前端没经验啊？ 可不可以考虑加密传输，即已经知道了聊天对象的公钥PublicKey，加密message，只有私钥可以正确解密？ 可不可以使用recipientId这个字段来指定聊天对象？ 免费聊天，fee这个字段是可以设置为0的，但我不知道还需要其他的设置不？ 社交的基本需求是通信，高级一点要好玩啊，有什么好的玩法呢？能不能发红包？有什么独特的？ 二级密码有什么用处？ 侧链独立的区块生成的奖励3.5到底指的是个啥？注册DAPP时候的内置资产？发行资产？ 注册委托人，我的dapp明明是5个，怎么还是有101委托人个生产区块？ 。。。。 附录： Asch主链交易类型 table th:first-of-type { width: 100px; } 名称 值 英文备注 中文备注 SEND 0 XAS TRANSFER XAS转账 SIGNATURE 1 SETUP SECOND_PASSWORD 设置二级密码 DELEGATE 2 SECOND_PASSWORD 注册受托人 VOTE 3 VOTE FOR DELEGATE 给受托人投票 MULTI 4 MULTISIGNATURE 多重签名 DAPP 5 DAPP REGISTER DAPP注册 IN_TRANSFER 6 DAPP DEPOSIT DAPP充值,把资产从主链转入到DAPP上 OUT_TRANSFER 7 DAPP WITHDRAW DAPP提币,把资产从DAPP转出到主链上 STORAGE 8 UPLOAD STORAGE 小文件存储上传到区块链 UIA_ISSUER 9 UIA ISSUER REGISTER 用户自定义资产发行商注册 UIA_ASSET 10 UIA ASSET REGISTER 用户自定义资产注册 UIA_FLAGS 11 UIA FLAGS UPDATE 用户自定义资产旗标更新 UIA_ACL 12 UIA ACL UPDATE 用户自定义资产访问控制列表更新 UIA_ISSUE 13 UIA ISSUE 用户自定义资产发行 UIA_TRANSFER 14 UIA TRANSFER 用户自定义资产转账 LOCK 100 ACCOUNT LOCK 账户锁仓 参考 ASCH HTTP API文档]]></content>
      <categories>
        <category>Asch DApp</category>
      </categories>
      <tags>
        <tag>asch</tag>
        <tag>dapp</tag>
        <tag>blockchain</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Asch开发日志 0x03 --- Asch相关算法]]></title>
    <url>%2F2018%2F05%2F15%2Fasch-related-algo%2F</url>
    <content type="text"><![CDATA[学习一下Asch的算法机制，也算是深入了解了。 Asch的共识算法在委托权益证明(DPOS, Delegated Proof of Stake)的基础上加入了拜占庭容错算法(PBFT, Practical Byzantine Fault Tolerance),从而保证区块链不分叉并且有较高的性能。 Asch 系统采用的共识机制是基于 DPOS 的，也是使用了委托人选举的制度，但是在算法的后半部分采用了一个优化后的 PBFT 算法变种，这个算法可以在 t &lt; n/3 时，以O(n^2)消息复杂度，O(1)的时间复杂度使忠诚的节点达成一致，不会分叉，其中 t 表示拜占庭节点(即可能发生任意行为的节点，比如网络延迟、停机、恶意攻击等等)的个数，n表示所有节点的个数。 委托人选举Asch 系统的委托人选举制度与 DPOS 是类似的，核心系统是由 101 个委托人节点组成，委托人是被社区选举的可信账户，得票最高的 101 个委托人负责生产区块。得票排名未进入前 101 名的账户被称为候选人，当他们将来获得足够多的选票并进入前 101 名后，将成为正式的委托人。 每个 Asch 用户都有权利投票给最多 101 位委托人，选票的权重是由用户持有的 XAS 数量决定。每一个选举周期产生 101 个区块，每一次投票和委托人排名的变化将体现在下一个周期。每个区块产生的间隔时间是 10 秒，新创建的区块会被广播到网络中并添加到区块链中。每当新的区块被添加到区块链中，该区块之前的所有交易的确认次数加一，得到 6 个确认后，可以认为交易是安全的，如果数额较小的交易，可以允许更小的确认次数，相反，数额较大的交易可以通过增加确认数来保证安全性。 如果有少数委托人发生故障，比如被攻击或者宕机，就会错失区块，这会被记录在案，这将影响该节点的在线率，进而影响社区的投票。因此委托人的竞选是需要严肃对待的，委托人应当由有一定网站运营经验的人来做，委托人要保障自己节点的稳定性，并以此促进整个系统的安全和稳定。 拜占庭容错Asch 系统与 DPOS 的不同主要体现在算法的后半部分。 DPOS 采用的方法是，首先对当前 round 的委托人列表进行随机的排序(保证每一轮的委托人顺序不同，也无法预测下一轮委托人顺序)，然后通过 round-robin 的方式依次让每个委托人创建区块。这个算法的主要缺点是，如果某个委托人节点叛变了，他可能会广播多个不一致的区块，这些区块间可能包括双重支付交易，导致整个网络被分叉了。当然，如果只有一个委托人叛变的话，这个分叉很快就可以通过下一次最长链同步的方法来消除，但是随着叛变节点的增加，消除分叉的时间将越来越长，少量节点的联合叛变将严重影响系统的安全性，即使一个交易达到 6 次确认，也很可能是不安全的。 为了解决这个问题，我们引入了 PBFT(Pratical Byzantine Fault Tolerance) 算法。PBFT 算法也是使用 round-robin 的方式选择委托人，但是选出委托人后并不立即创建区块，而是首先发起一个提议(propose)，这个提议的目的是确定下一次区块的 hash。当超过 2/3 的节点都赞成该提议时，才接受由提议人创建的的下一个区块，下一个区块的 hash 必须与当前 round 达成共识的区块 hash 一致。从本质上来说，PBFT 算法的加入解决了委托人权利滥用的问题，使得委托人的记账能力更为可控。 Asch 受托人与锻造Asch系统中每个账户都可以注册成为受托人(需要支付100XAS)。成为受托人以后可以接受任意持币人的投票，当得票率排名进入前101时，可以获得记账权(即生产区块的权利，相当于比特币中的矿工)，并获取一定的奖励。 生产区块的过程叫做锻造(forging)。锻造不像比特币挖矿那样需要很强的算力，普通电脑即可进行，验证记账权的算法综合了时间片验证、受托人随机排名、受托人签名以及pbft算法等，具体可以参考asch的共识协议 排名前101的受托人按照时间顺序轮流产生区块，区块间隔为10秒。当轮班受托人出现异常无法生产区块时，则延期到下一个10秒，由下一个受托人继续生产。 每101个区块为一个周期，每个周期的受托人锻造顺序随机变换，每个周期的最后一个区块产出的时候，会进行该周期的收益结算，同时刷新新的排名。 因为宕机、网络错误等原因无法生产区块的受托人无法获得该周期的收益，并且会降低生产率。生产率是衡量一个受托人稳定性的指标，生产率过低会影响得票率。正常生产区块的受托人则平分收益，收益包括区块奖励和交易费，排名和得票率的高低并不影响收益的多少，进入前101名的受托人收益率是相同的。 密钥对生成算法123a.The Asch system selected the entropy length of 128bit and converted it into 12 words conforming to the BIP39 standard, namely the master password. b.Perform SHA-256 hashing on the master password,and hash_seed is obtained. c.After the ed25519 Edwards curve signature algorithm is used to sign hash_seed, the key pair is generated, including the public key and private key. a. Asch 系统选择的熵长度为 128bit，将之转换成符合BIP39标准的12 个单词，即主密码。b. 以主密码的sha256哈希做种子，得到hash_seedc. 再通过ed25519爱德华兹曲线签名算法对hash_seed进行签名，得到生成密钥对，包括公钥和私钥。 阿希地址生成算法：a.Perform SHA-256 hashing on the public key buffer,get h1. b.Perform RIPEMD-160 hashing on the h1,get payload. c.Perform SHA-256 hashing on the payload,get checksum1. d.Perform SHA-256 hashing on the checksum1,get checksum2. e.Paylaod and checnksum2 join together,get seed. f.Take the first len(payload)+4 bytes of the seed,get addr. g.Convert the addr from a byte string into a base58 string using Base58Check encoding,get b1. h."A" and b1 join together,get final Asch address.This is the most commonly used Asch Address format. a.对公钥buffer进行1次sha256运算，得到h1。b.然后对h1进行r160运算得到paylaod。c.对payload进行sha256得到checksum1。d.对checksum1进行sha256得到checksum2。e.拼接 paylaod和checnksum2，得到seed。f.取seed的len(payload)+4，得到addr。g.对addr进行base58编码得到b1。h.“A”+b1即为生成的base58格式的阿希地址。 参考 Asch 白皮书]]></content>
      <categories>
        <category>Asch DApp</category>
      </categories>
      <tags>
        <tag>asch</tag>
        <tag>dapp</tag>
        <tag>blockchain</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Asch开发日志 0x02 --- 青峰老大在CSDN上的开发教程]]></title>
    <url>%2F2018%2F05%2F15%2Fdapp-sqf-md%2F</url>
    <content type="text"><![CDATA[asch团队也是不容易啊，自己开发了平台不算，还得推广啊。生态现在没有建立起来，开发者能力不够，社区不够活跃，老大只能自己撸起袖子加油干，自己又开发了一个 Dapp开发教程三 Asch Dapp Mini DAO， Dapp开发教程四 Asch Dapp Dice Game 的Dapp，代码都是开源的，好好理解吧。 妈蛋，不得不骂娘了，这个太坑了，智能合约的部署方式都改变了，这两个项目Dapp开发教程三 Asch Dapp Mini DAO， Dapp开发教程四 Asch Dapp Dice Game都是what the fuck，真心是没救了，浪费了我一下午，又给他们踩雷了。不得不说，阿希这个平台处于非常原始的阶段，为开发者提供的API都在变化之中，没办法，这两个项目没有办法直接跑了，只能跑 cctime这个demo了，这个倒是可以直接注册运行，我还是好好研究一个cctme,或者可以移植一下 [Dapp开发教程四 Asch Dapp Dice Game]， 哈哈。 参考 Dapp开发教程三 Asch Dapp Mini DAO Dapp开发教程四 Asch Dapp Dice Game Dapp开发教程 发布Dapp到线上 cctime]]></content>
      <categories>
        <category>Asch DApp</category>
      </categories>
      <tags>
        <tag>asch</tag>
        <tag>dapp</tag>
        <tag>blockchain</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Asch开发日志 0x01 --- Dapp教程]]></title>
    <url>%2F2018%2F05%2F15%2Fasch-hello-world-deep-md%2F</url>
    <content type="text"><![CDATA[发行自己的数字资产这个全程按照 ASCH 发行资产文档 做的，难度不大，主要是对概念的理解吧。 建议是注册Dapp时候的创世账户来发行数字资产，这个数字资产必须先设置二级密码什么的，这个对于一般的asch开发者来说会设置就好了，其他的不做要求。（好像不能先创建二级密码在发行数字资产）遇到一个小bug， 注册好了发行商信息后，在注册数字货币的时候，网页整个黑了，我傻乎乎的等了三四分钟，还是没反应。后来在交流群里面，原来是网页兼容性问题。 解决方案一：打开chrome的控制台console使用设备进行设置； 解决方案二：调整屏幕分辨率； 解决方案三：不要使用GUI，直接调用API进行设置； 原因好像是：网页黑的是遮罩层，把中间的可视化区域，搞到上面去了。其实我对这个是没有理解的，这个属于什么领域呢？前端嘛，零基础啊，我还是乖乖的去看看js在chrome下的调试指南不指北 Chrome 开发工具指南，保教不会什么的吧。 关于如何开发一个Dapp在这里瞎BB了两天，实际上一行代码没敲，完全是利用asch的脚手架实现了一个Dapp，后面怎么办呢？ Dapp相关接口API假设目前有一个dapp，id为 97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86 涉及如下几个账户dapp注册账户：chalk flame jeans rebuild dutch stone abstract capital lucky pottery raven depend普通dapp账户： minor borrow display rebel depart core buzz right distance avocado immense push,已经进行过充值、发表了一篇文章以及相关评论、点赞、评论打赏等。 注册dapp123456789在dapps目录下：git clone https://github.com/AschPlatform/cctime.git./node_modules/asch-cli/bin/asch-cli registerdapp -f dapps/cctime/dapp.json -e "chalk flame jeans rebuild dutch stone abstract capital lucky pottery raven depend"// 返回结果为dappid97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86mv cctime 97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86重启aschd后，dapp即可使用。web地址：http://10.10.30.10:4096/dapps/97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86/，目前该dapp前端ui尚未完成，但可以自行填写参数调用apiapi也可以访问，举例：http://10.10.30.10:4096/api/dapps/97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86/blocks/height，可以查询dapp高度 充值100xas到dapp123 ./node_modules/asch-cli/bin/asch-cli deposit -e "minor borrow display rebel depart core buzz right distance avocado immense push" -d 97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86 -c XAS -a 10000000000// 返回结果为交易id36e1626d5ef30ca1c75a3b96cdf6489984d64336736278d429c2300fd10ff126 dapp内部转账1234在dapp内给A6H9rawJ7qvE2rKwQfdtBHdeYVehB8gFzC转1.0XASz资产./node_modules/asch-cli/bin/asch-cli dapptransaction -e "minor borrow display rebel depart core buzz right distance avocado immense push" -d 97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86 -t 3 -f 10000000 -a '["XAS","100000000","A6H9rawJ7qvE2rKwQfdtBHdeYVehB8gFzC"]'// 返回交易id90b85ff532c546ee18e54e0e5d0473fadfa421b29017abcea410245a17e89d35 查询dapp账户余额1234567891011curl -X GET 'http://10.10.30.10:4096/api/dapps/97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86/balances/A6H9rawJ7qvE2rKwQfdtBHdeYVehB8gFzC' &amp;&amp; echo// 返回结果&#123; "balances": [ &#123; "currency": "XAS", "balance": "100000000" &#125; ], "success": true&#125; 查询dapp高度123456curl -X GET 'http://10.10.30.10:4096/api/dapps/97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86/blocks/height' &amp;&amp; echo// 返回结果&#123; "height": 2, "success": true&#125; 发布文章123./node_modules/asch-cli/bin/asch-cli dapptransaction -e "minor borrow display rebel depart core buzz right distance avocado immense push" -d 97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86 -t 1000 -f 10000000 -a '["title-test","","hello world!","tag1,tag2"]'// 返回结果223c29dc490302b81109ecfd71c27edf16bcd182942c289a758256ec27d5cf7b 文章列表1234567891011121314151617181920212223curl -X GET 'http://10.10.30.10:4096/api/dapps/97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86/articles' &amp;&amp; echo// 返回结果&#123; "articles": [ &#123; "id": "1", "tid": "223c29dc490302b81109ecfd71c27edf16bcd182942c289a758256ec27d5cf7b", "authorId": "AFUH568CbGC2GPcE4gXHiZhxdYQYfziz2J", "timestamp": 33595702, "title": "title-test", "url": "", "text": "hello world!", "tags": "test1,test2,code", "votes": 0, "comments": 0, "t_timestamp": 33595702, "t_type": 1000, "t_height": 359, "score": 0 &#125; ], "success": true&#125; 文章详情1234567891011121314151617181920curl -X GET 'http://10.10.30.10:4096/api/dapps/97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86/articles/1' &amp;&amp; echo// 返回&#123; "article": &#123; "id": "1", //文章id，评论时的参数 "tid": "223c29dc490302b81109ecfd71c27edf16bcd182942c289a758256ec27d5cf7b", "authorId": "AFUH568CbGC2GPcE4gXHiZhxdYQYfziz2J", "timestamp": 33595702, "title": "title-test", "url": "", "text": "hello world!", "tags": "test1,test2,code", "votes": 1, //点赞数 "comments": 1, // 评论数 "t_timestamp": 33595702, "t_type": 1000, //合约id "t_height": 359 //dapp区块高度 &#125;, "success": true&#125; 评论1234文章列表结果中的对应id的文章"comments"会加1./node_modules/asch-cli/bin/asch-cli dapptransaction -e "minor borrow display rebel depart core buzz right distance avocado immense push" -d 97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86 -t 1001 -f 10000000 -a '["1","","content1"]'// 返回交易id674964e3bbb75d31785ff75d56df85f27b5f02a453c462df37e96fc272292898 获取文章评论列表1234567891011121314151617181920curl -X GET 'http://10.10.30.10:4096/api/dapps/97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86/articles/1/comments' &amp;&amp; echo// 返回结果&#123; "comments": [ &#123; "id": 1, //comment id,即cid，给评论打赏时会用 "tid": "674964e3bbb75d31785ff75d56df85f27b5f02a453c462df37e96fc272292898", "authorId": "AFUH568CbGC2GPcE4gXHiZhxdYQYfziz2J", "aid": 1, //文章id "pid": 0, "content": "content1", "rewards": 0, "t_timestamp": 33597194, "t_type": 1001, //合约id "t_height": 472 &#125; ], "count": 1, "success": true&#125; 给文章投票123./node_modules/asch-cli/bin/asch-cli dapptransaction -e "minor borrow display rebel depart core buzz right distance avocado immense push" -d 97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86 -t 1002 -f 10000000 -a '["1","100000"]' // 返回， 3f2a934829dd0301d4cf9e57772f76fa1e3c0b79eab07d59e5344078318ac71c 给评论打赏123./node_modules/asch-cli/bin/asch-cli dapptransaction -e "minor borrow display rebel depart core buzz right distance avocado immense push" -d 97b12583fed2973da179a6484ef15155f49503bc7ce2d45a6574f8e8ab09ff86 -t 1003 -f 10000000 -a '["1","100000000"]'// 返回,打赏1.0 xasa8ecd9b0f80204d4aa1a63e1c18a4b6f582c5f8adc4b6c862246e913be008e2d 参考 Dapp开发教程一 Asch Dapp Hello World Dapp开发教程二一 Asch Dapp Asset ASCH 发行资产文档 Asch DAPP核心开发流程解析 Chrome 开发工具指南]]></content>
      <categories>
        <category>Asch DApp</category>
      </categories>
      <tags>
        <tag>asch</tag>
        <tag>dapp</tag>
        <tag>blockchain</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Asch开发日志 0x00 --- 搭建 hello world开发环境]]></title>
    <url>%2F2018%2F05%2F14%2Fasch-hello-world%2F</url>
    <content type="text"><![CDATA[今天正式开始搭建asch平台下的Dapp，目标是做一个建易的点对点的chat room,不过说不定也会改变这个主意，毕竟开发能力有限，但我会尽我所能开发好玩有趣的应用，写下博客，督促自己坚持下去。 简单流程按照给出的参考教程，一步步的搭建asch的开发环境，这里不在重复安装教程( Asch),问题主要是出现在我自己搭建一个hello world的Dapp时候， &gt; mkdir asch-test-dapp &gt; cd asch-test-dapp &gt; asch-cli dapps -a ----------------------------------------------------- Dapp name &gt; Double-Helix Enter DApp description &gt; Wish the motherland as soon as possible Enter DApp tags &gt; DNA 0.01，asch, dapp Enter DApp link &gt; https://github.com/houruixiang/Double-Helix/Double-Helix.zip Enter DApp icon url &gt; http://p8hu3ca6r.bkt.clouddn.com/dna.jpg 1234567891011121314151617Enter public keys of dapp delegates [ &#123; address: 'AGGajXq29996WgPFTmX8CnAkr1xnTR1YmA', secret: 'obscure into term trip uncover chicken between city amount couch skirt owner', publicKey: '4421dec44945fe867c527b18cd72e89c15398301a2280b0a9916f2854bf660d3' &#125;, &#123; address: 'A9tStNz4aK52AzHTTZPQctPvYrj6ETDSY2', secret: 'water rebuild hospital over distance siege this cement long knife hair flock', publicKey: 'f9349bd2406b8fe5182ccde695525fabb683d275d2969ec42193e75518cc49d9' &#125;, &#123; address: 'A8xtzsqKMrg9Rz8z4n7aCupA5N5XQ8xtWP', secret: 'fruit dolphin equip fatal clever chicken bubble pair visit rare fiction pair', publicKey: '1ba142b41223546c370bca19f5901647bea1ce20c88f9bfeb7377d14fbfb7aff' &#125;, &#123; address: 'A7tXgk3ifaHtVCGkNCnSGFDYrbZoaUVKy9', secret: 'album side never submit negative rent priority rubber sting vacant license fog', publicKey: '72ded9c535b8754c6d3dd864168c314f9582c9e5b65cea376ba28ecea51aedbe' &#125;, &#123; address: 'ACDwUaNJGzP81ciX8DHwpogwuT1CA9vmsp', secret: 'power protect notice convince morning stove engine inmate joke stone pen paper', publicKey: 'a59aeefee795e6684428b429a835834a8bd5a85a3ab0a5495f21711afd2b034b' &#125; ] Enter master secret of your genesis account &gt; major orange chair orbit rice biology fame average rotate craft hole police Enter asset name, for example &gt; CHROMO 20481024512 8 以上这些都是没有什么困难，但是信息要保存好，丢了就惨了。需要说明以下，这个账户即使公钥与私钥生成的账户，这个跟所有的数字货币都是一样的概念，只有当你把这些人的账户信息配置到你的DAPP工程下的时候，他们才是委托人，就是这个概念，别的没有什么。12345678910&gt; asch-cli crypto -g[ &#123; address: 'AQHyfWSX7MNQtyBUHWxg7K28r8S2SvkcaN', secret: 'human bone dish tongue ship chronic segment poet universe share absorb excite', publicKey: '1cb1638349a9c6bf460b68bfc0878f5175082fb41a53ff884c4d7f1667030040' &#125; ]创世账户“ someone manual strong movie roof episode eight spatial brown soldier soup motor ”登陆（该账户中有初始发行的1亿xas token），然后给 AQHyfWSX7MNQtyBUHWxg7K28r8S2SvkcaN 地址转10000个xas 问题就处在这里，这个转账操作不是像 Dapp开发教程一 Asch Dapp Hello World介绍的那样是一个固定账户，而应该是一个你自己生成的账户，asch-cli crypto -g生成的secret可以作为主密钥直接登陆钱包，address是创世账户转账地址，然后就OK了。 &gt; asch-cli registerdapp -f dapp.json -e &quot;human bone dish tongue ship chronic segment poet universe share absorb excite&quot; 输出 id = 1543fba6d566ebcdfd5d485deb7653473c166ea5ae93de151ff9e1edd92410db 这个id非常重要，是以后访问DAPP的id,也是调试的界面，其中 查看生成所有的Dapp的信息 http://localhost:4096/api/dapps 查看指定id的Dapp的信息 http://localhost:4096/api/dapps/get?id=1543fba6d566ebcdfd5d485deb7653473c166ea5ae93de151ff9e1edd92410db 几个账户的意义创世账户: someone manual strong movie roof episode eight spatial brown soldier soup motor 这个是testnet作为测试使用的，里面有几亿个 xas。 genesis account: major orange chair orbit rice biology fame average rotate craft hole police 这个是我们创建Dapp时候的创世账户，具体什么意思怎么使用，我也不知道，我就简单的设置了也给账号，看以后吧。 dapp account: human bone dish tongue ship chronic segment poet universe share absorb excite 这个是转账的账号，这个账号里面可以看到我们创建的Dapp,嗯，大概就是这样子。 2018年5月15日13点09分这个是官方给出的标准流程 Asch DAPP核心开发流程解析 其中有这样一段落，我们来细究一下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960613.1 发行资产（UIA）发行自己的资产，请参考这个链接http://docs.asch.mobi/docs/asch_issue_assets.html。 这里我们在钱包页面生成一个新账户A，主密码为“almost journey future similar begin type write celery girl month forget breeze”，对应的地址是AAjoobuMcmkQ1gS8vTfBy3dQavBiH7sBCF，该账户将作为下面的cctime.XCT资产发行者、cctime DAPP的注册者以及给其它账户转账的发送者，创世账户给该地址转1000个xas。A账户去注册发行商cctime，然后注册一个资产XCT（上限100亿，精度8，描述为：cctime.org的token时讯币，其它用默认的），最后发行10亿的cctime.XCT。``` ``` bash 3.2 利用模板启动第一个DAPPAsch作为一个区块链开发平台，为开发者提供了一个安全且高性能的虚拟机（asch-sandbox）以及一系列的内部接口、框架等。其中的一个脚手架就是利用模板来生成自定义的DAPP，通过回答几个问题就可以完成DAPP框架代码的开发工作。 模板包含了启动一个dapp需要的最少数据3.2.1 生成DAPP元信息(创世块）// 生成5个受托人账号zhenxi@MiAir:~/Codes/github/AschPlatform/asch$ asch-cli crypto -g? Enter number of accounts to generate 5[ &#123; address: 'A9pDhjc7NuYMWYLxkgAgVmHE2NQ7diMcWX', secret: 'fit night someone unveil dwarf believe middle evidence puzzle hotel common choose', publicKey: 'afdf69f0da9ff333218f2cd10cb0a907c2e76788f752b799cb1dab3a9f03bf63' &#125;, &#123; address: 'A2jvQUNowLgP9hHMN3tSCAUkakuigGRytB', secret: 'lawsuit ride civil slice kitchen unfold unable lumber prevent suspect finger chunk', publicKey: '67d52a0265f9e5366660c8b384cee56d3f8b5737b2dd3c617d22df83b5ebef02' &#125;, &#123; address: 'A7JjHgx7ACCJ6AxypBn4Qt9NrGaY4JuZDF', secret: 'absurd sweet blast dinner battle zero ladder steak coral fork venture coffee', publicKey: '39c2322600a0c81ecfa97119ec8e2d5bfb73394914d92b54e961846a987e4e22' &#125;, &#123; address: 'AMu7kuP9TjywkUQQQgALid96So2VCve5QB', secret: 'topic ramp throw cloud moment jungle bar series task protect erupt answer', publicKey: '4740d2c16bf6c5a174eba1e0f859253a64851d30acbc9655b01394af82d3e325' &#125;, &#123; address: 'A9BzaJDkyzb9RVAFjsePMemSVXMDLiQpjJ', secret: 'shoot tired know dish rally kiwi snack patrol bunker ocean panel this', publicKey: 'b433c226645981477642491f77de7b8d63274aa51f932bbe1fe3f445a8aaecc9' &#125; ]Done // 根据模板和自定义参数生成自己的dapp框架，包含创世块、配置文件、数据和合约、接口、日志等目录cd dapps mkdir cctime &amp;&amp; cd cctimezhenxi@MiAir:~/Codes/github/AschPlatform/asch/dapps$ asch-cli dapps -aCopying template to the current directory ...? Enter DApp name cctime? Enter DApp description cctime.org? Enter DApp tags news? Choose DApp category News? Enter DApp link http://github/aschplatform/cctime.zip? Enter DApp icon url http://a.com/x.png? Enter public keys of dapp delegates - hex array, use ',' for separator afdf69f0da9ff333218f2cd10cb0a907c2e76788f752b799cb1dab3a9f03bf63,67d52a0265f9e5366660c8b384cee56d3f8b5737b2dd3c617d22df83b5ebef02,39c2322600a0c81ecfa97119ec8e2d5bfb73394914d92b54e961846a987e4e22,4740d2c16bf6c5a174eba1e0f859253a64851d30acbc9655b01394af82d3e325,b433c226645981477642491f77de7b8d63274aa51f932bbe1fe3f445a8aaecc9? How many delegates are needed to unlock asset of a dapp? 3DApp meta information is saved to ./dapp.json ...? Enter master secret of your genesis account [hidden] //这里输入的密码为：'almost journey future similar begin type write celery girl month forget breeze'? Do you want publish a inbuilt asset in this dapp? Yes? Enter asset name, for example: BTC, CNY, USD, MYASSET XCT? Enter asset total amount 100000000? Enter asset precision 8New genesis block is created at: ./genesis.json// 生成的文件如下zhenxi@MiAir:~/Codes/github/AschPlatform/asch/dapps/cctime$ lsconfig.json contract dapp.json genesis.json init.js interface model public 12343.2.2 注册DAPP到localnet上zhenxi@MiAir:~/Codes/github/AschPlatform/asch/dapps/cctime$ asch-cli registerdapp -f dapp.json -e "almost journey future similar begin type write celery girl month forget breeze"// 返回结果为dappId75d084dc91221b380e7a3c6b3b7467935572b4ebaa1e9a3db91e1239377c1fed 这样就非常清晰了。新账户A，主密码为“almost journey future similar begin type write celery girl month forget breeze”，对应的地址是AAjoobuMcmkQ1gS8vTfBy3dQavBiH7sBCF， 该账户将作为下面的cctime.XCT资产发行者、cctime DAPP的注册者以及给其它账户转账的发送者，创世账户给该地址转1000个xas。A账户去注册发行商cctime，然后注册一个资产XCT（上限100亿，精度8，描述为：cctime.org的token时讯币，其它用默认的），最后发行10亿的cctime.XCT。 当初就是对这段理解不够啊，说的非常详细了。在测试环境下testnet，账户A想要发行一个Dapp和数字资产，当然也理所应当的把Dapp注册到账户A下面，但是这个时候账户A没有阿希币XAS，那么asch的开发这在自己的创世区块 someone manual strong movie roof episode eight spatial brown soldier soup motor 下给了一个亿的xas，这个只要你在本地安装好asch的生产环境都可以访问到。因此，第一步才需要从创世区块下向账户A转出一定的xas,这样账户A就有了足够的xas发行代币了。我的天啊，我居然花费了两天才明白了asch团队的苦心，也是醉了。 其余的使用 asch-cli crypto -g 生成的账户都可以看成一般用户，可以用来转账的，注册Dapp时候填写的委托人也只是DPOS共识机制所要求的（3-101个委托人）。 至于发行资产，我现在的理解是，在注册Dapp时候发行的那个是Dapp内部的资产，之内在Dapp内部使用，但是我设置的好像是20481024512，超过了一亿，没有正确加载出来，我还是要在搞一下。 资产再探究Dapp的创世块中可以创建内置资产，但不是必须的，内置资产无法跨链转账，只能在链内使用。在主链发行的UIA（用户自定义资产）可以充值到任意dapp中，也可从dapp提现到主链，这是dapp内置资产和UIA最大的区别。“一链多币，一币多链”指的就是主链可以发行多个UIA，而每个UIA都可以充值到多个dapp中。 进一步开发调试使用浏览器打开http://localhost:4096/dapps/1543fba6d566ebcdfd5d485deb7653473c166ea5ae93de151ff9e1edd92410db/，可以访问默认的一个前端页面，该页面可以进行一些简单的接口测试 Asch Dapp开发教程一 Asch Dapp Hello World 新手搭环境与发布dapp教程 Asch DAPP核心开发流程解析]]></content>
      <categories>
        <category>Asch DApp</category>
      </categories>
      <tags>
        <tag>asch</tag>
        <tag>dapp</tag>
        <tag>blockchain</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[完善博客实用功能]]></title>
    <url>%2F2018%2F05%2F12%2FMarkdown%20improve%2F</url>
    <content type="text"><![CDATA[既然自己搭建了一个博客系统，就要有点样子的，进行个性化的设置，好在hexo next主题实现这些功能简直不要太容易，于是就跟风来一波，主要是是通过配置两个文件实现的：站点配置文件..\blog\_config.yml主题配置文件..\blog\themes\next\_config.yml 设置标签和分类添加标签第一次配置，输入命令： hexo new page tags 确认站点配置文件里有tag_dir: tags确认主题配置文件里有tags: /tags编辑站点的source/tags/index.md，添加以下代码 title: tags date: 2015-10-20 06:49:50 type: &quot;tags&quot; comments: false 添加分类第一次配置，输入命令： hexo new page categories 确认站点配置文件里有category_dir: categories确认主题配置文件里有categories: /categories编辑站点的source/categories/index.md，添加以下代码 title: categories date: 2015-10-20 06:49:50 type: &quot;categories&quot; comments: false 每当创建新的md文件时候，输入 hexo new newfile.md 然后在生成文件的开头添加12345678---title: title #文章標題date: 2016-06-01 23:47:44 #文章生成時間categories: "Hexo教程" #文章分類目錄 可以省略tags: #文章標籤 可以省略 - 标签1 - 标签2--- 设置about直接写就好了。 字数统计和时间统计在根目录下安装 hexo-wordcount,运行： npm install hexo-wordcount --save 然后在主题的配置文件_config.yml中，配置如下：123456# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount:item_text: truewordcount: truemin2read: true 在每篇文章末尾统一添加“本文结束”标记具体实现方法 hexo之next主题个性化配置详细教程 中的章节6。 站内搜索当文章多起来的时候，标签提供的作用已经很少了，只能简单索引，搜索却能精确查找，最简单的本地站内搜索。安装nodejs插件： npm install hexo-generator-searchdb --save 修改 站点配置 文件12345search: path: search.xml field: post format: html limit: 10000 修改 主题配置文件12local_search: enable: true 不过一个大bug是搜索的时候，直接弹出一个对话框，这个让人非常的不爽啊。 点击出现💗效果在网址 http://7u2ss1.com1.z0.glb.clouddn.com/love.js将里面的代码复制一下，新建 love.js 文件并且将代码复制进去，然后保存。将love.js文件放到路径/themes/next/source/js/src里面，然后打开\themes\next\layout\_layout.swig文件,在文件最末尾添加以下代码：12&lt;!-- 页面点击小红心 --&gt;&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt; 动态粒子背景这个现在非常流行，html5最新支持的canvas功能。修改配置文件 打开 /next/_config.yml 在里面添加如下码：(可以放在最后面)。 1234# background settings# add canvas-nest effect# see detail from https://github.com/hustcc/canvas-nest.jscanvas_nest: true 到此就结束了，运行 hexo clean，然后运行 hexo g -d,完成部署就可以了。 Gitment评论这个是个比较简单的过程，不需要 hexo next主题集成gitment评论系统 里面这么复杂的操作，只需要第一步和第二步就可以完成整个评论系统了。需要特别注意的是不要使用中文命名md文件啊，不然会显示“初始化页面失败的”，这个真的是血的教训啊。 参考文献 hexo 搜索功能 hexo之next主题个性化配置详细教程 hexo next主题集成gitment评论系统 hexo+github教程之三：hexo next主题配置]]></content>
      <categories>
        <category>实用技术</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>个性化配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown 简易入门教程]]></title>
    <url>%2F2018%2F05%2F10%2FMarkdown%2F</url>
    <content type="text"><![CDATA[闲得发慌，抽出时间学习以下 Markdown 这门标记语言，于是就有了这篇文章了。 编辑器直接使用 Visual Studio Code 就可以愉快的一边码字，一边预览效果了，简直不要太开心。 Markdown 属于标记性语言,语法超级简单，入手超快。 Markdown 语法手册标题一般来说，四级标题足够文档的使用，这个可以通过简单的 # 实现，别的方法就不介绍了。 1234# 一级标题## 二级标题### 三级标题#### 四级标题 粗体斜体粗体: **粗体** 斜体: *斜体* 粗体: 粗体斜体: 斜体 段落和换行 第一种： 直接回车键，只能段落间只能有一个空行123这是第一段这是第二段 这是第一段 这是第二段 第二种方法：使用 \ 控制空行数目1这是第一段 &lt;br /&gt; &lt;br /&gt; &lt;br /&gt;这是第二段 这是第一段 这是第二段 分割线可以在一行中用三个及以上的星号、减号、底线来建立分隔线，行内不能有除空格外的其他东西。 --- *** ___ 文字引用使用&gt;表示文字引用,但是我这个不知道为什么不使用&gt;也可以。12&gt;"野火烧不尽，春风吹又生。""野火烧不尽，春风吹又生。" “野火烧不尽，春风吹又生。”“野火烧不尽，春风吹又生。” 代码行内代码这个是一个行内的`代码` 这个是一个行内的代码 代码块使用四个缩进的空格代表代码块。 # 这是一个代码块，左边有四个空格。 int main(void){ prinf(&quot;hello world.\n&quot;); } 列表无序列表使用 *, +, -表示无序列表。 * 无序列表1 + 无序列表2 - 无序列表3 无序列表1 无序列表2 无序列表3 有序列表使用数字和点表示有序列表。 1. 有序列表1 2. 有序列表2 3. 有序列表3 有序列表1 有序列表2 有序列表3 链接网址链接网址链接有两种形式：行内式、参考式。不管是哪一种形式，链接文字都是使用[方括号]来标记的。 行内式1[Ruihou Blog](https://github.com/houruixiang/ruihou.github.io) Ruihou Blog 参考式 123456这里是[Google][1]; 这个是[百度][2]; 这个是[必应][]，再来一个[谷歌][]。非常好玩的一种实现方法。[1]: https://www.google.com/[2]: https://www.baidu.com/[必应]: https://www.bing.com/[谷歌]: https://www.google.com/ 这里是Google; 这个是百度; 这个是必应，再来一个谷歌。非常好玩的一种实现方法。 图片链接图片链接与上面的网址链接类似，同样有两种形式：行内式和参考式，只不过图片链接在前面加上一个感叹号!，在此不做累述。 行列式 ![序列图](http://p8hu3ca6r.bkt.clouddn.com/%E6%B5%81%E7%A8%8B%E5%9B%BE.JPG) ![流程图](http://p8hu3ca6r.bkt.clouddn.com/%E5%BA%8F%E5%88%97%E5%9B%BE.JPG) 参考式 ![谷歌][1] [1]: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_120x44dp.png &quot;Google&quot; Markdown 进阶语法标签 tags: [Markdown,语言]categories: [技术] 目录这个超级简单好用，简直不要太开心了。一句 [TOC] 就可以搞定了。[TOC]遗憾的是，这个hexo也不支持， VS Code是可以正确支持的。 表格表格的话我建议使用最简便的方式，不要太复杂的表格，高级的表格有更加专业的工具。 12345|long_long_id|long_long_name|long_long_score|| --- | :---: | ---: || 001 | Mark | 90 || 002 | Ford | 80 || 003 | Alan | 95 | 还有就是对齐了，用:对齐，:写在在—的左边就是左对齐，右边就是右对齐，两边都写就是居中。 long_long_id long_long_name long_long_score 001 Mark 90 002 Ford 80 003 Alan 95 脚注看样子跟网址引用很像的啊。 这是脚注一 [^1] 这是脚注二 [^2] 这是脚注三 [^3] [^1]: 脚注一 [^2]: 脚注二 [^3]: 脚注三 这是脚注一[^1]这是脚注二[^2]这是脚注三[^3][^1]: 脚注一[^2]: 脚注二[^3]: 脚注三 非常遗憾，这个居然也是显示不出来啊。 序列图这个在我的VS Code上面是可以正常显示的，但是在guthub pages上面就不可以显示，这个我也是没有办法了，所以最好的办法就是当成图片引用就好了，本身也不建议使用markdown代码来画图。 123Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks! 123Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks! 流程图这个在我的VS Code上面是可以正常显示的，但是在guthub pages上面就不可以显示，这个我也是没有办法了，所以最好的办法就是当成图片引用就好了，本身也不建议使用markdown代码来画图。 123456789st=&gt;start: Starte=&gt;end: Endop1=&gt;operation: My Operationsub1=&gt;subroutine: My Subroutinecond=&gt;condition: Yes or No?io=&gt;inputoutput: catch something...st-&gt;op1-&gt;condcond(yes)-&gt;io-&gt;econd(no)-&gt;sub1(right)-&gt;op1 123456789st=&gt;start: Starte=&gt;end: Endop1=&gt;operation: My Operationsub1=&gt;subroutine: My Subroutinecond=&gt;condition: Yes or No?io=&gt;inputoutput: catch something...st-&gt;op1-&gt;condcond(yes)-&gt;io-&gt;econd(no)-&gt;sub1(right)-&gt;op1]]></content>
      <categories>
        <category>实用技术</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>文档编辑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[个人博客第一篇]]></title>
    <url>%2F2018%2F05%2F09%2Fname%2F</url>
    <content type="text"><![CDATA[主要是为了学习使用，这个博客的内容不限于技术，也包括自己日常吐槽，我想坚持下去，能够对自己的生活，工作，学习等不断的记录，改变自己的生活，希望可以帮助一些人。]]></content>
      <categories>
        <category>扯淡</category>
      </categories>
      <tags>
        <tag>入门</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F05%2F09%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>hello world</category>
      </categories>
      <tags>
        <tag>入门</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Asch Dapp]]></title>
    <url>%2F2018%2F05%2F01%2Fdevelop-log%2F</url>
    <content type="text"><![CDATA[2018年5月23日23点16分 先把Asch官网的那个登陆界面搞下来，先抄后改，改完再说。 2018年5月25日21点01分 昨天死活凑出了一个登陆界面，妈蛋这不是一个人干的活啊，这个真的是需要一个团队的， 一个人要被搞死的节奏。唉，还要在黑暗中摸索很多年。 今天去了公司，全程漫游，丝毫没有干活的愿望啊，真的是没有什么心情去干活啊，我可能不是 一个能够顶住强压的人吧，最近感觉整个人都不好了。贪心不足，利令智昏。]]></content>
      <categories>
        <category>开发日志</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
</search>
